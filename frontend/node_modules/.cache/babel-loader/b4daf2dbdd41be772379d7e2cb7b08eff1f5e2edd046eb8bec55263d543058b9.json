{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\twitter-clone\\\\twitter-clone-frontend\\\\src\\\\components\\\\IsAuthenticated.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { gql, useQuery } from '@apollo/client';\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IS_LOGGED_IN = gql`\n{\n    me {\n        id\n    }\n}\n`;\nexport default function IsAuthenticated() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(IS_LOGGED_IN); // loading state, error state and data returned by the query\n  const location = useLocation(); // returns the location object from the current URL\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 22\n  }, this); // returns text \"Not Authorised!\"\n  return data.me ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 11\n  }, this) // renders the child route's element\n  : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true,\n    state: {\n      from: location\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }, this); // \"replace\" won't let you go back to a certain page in a browser and \"state\" allows to store information in a history state\n}\n_s(IsAuthenticated, \"hko0I8+Fk3gkDnLCqCPMWxAUitQ=\", false, function () {\n  return [useQuery, useLocation];\n});\n_c = IsAuthenticated;\nvar _c;\n$RefreshReg$(_c, \"IsAuthenticated\");","map":{"version":3,"names":["React","gql","useQuery","Navigate","Outlet","useLocation","jsxDEV","_jsxDEV","IS_LOGGED_IN","IsAuthenticated","_s","loading","error","data","location","children","fileName","_jsxFileName","lineNumber","columnNumber","message","me","to","replace","state","from","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/twitter-clone/twitter-clone-frontend/src/components/IsAuthenticated.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { Navigate, Outlet, useLocation  } from \"react-router-dom\";\r\n\r\nconst IS_LOGGED_IN = gql`\r\n{\r\n    me {\r\n        id\r\n    }\r\n}\r\n`;\r\n\r\ninterface Properties {\r\n    children?: React.ReactNode // if this prop exists\r\n}\r\n\r\nexport default function IsAuthenticated(){\r\n    const {loading, error, data} = useQuery(IS_LOGGED_IN); // loading state, error state and data returned by the query\r\n    const location = useLocation(); // returns the location object from the current URL\r\n    if(loading) return <p>Loading...</p>;\r\n    if(error) return <p>{error.message}</p>; // returns text \"Not Authorised!\"\r\n    return data.me\r\n        ? <Outlet /> // renders the child route's element\r\n        : <Navigate to=\"/login\" replace state={{from: location}} /> // \"replace\" won't let you go back to a certain page in a browser and \"state\" allows to store information in a history state\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,SAASC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAS,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,YAAY,GAAGP,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC;AAMD,eAAe,SAASQ,eAAeA,CAAA,EAAE;EAAAC,EAAA;EACrC,MAAM;IAACC,OAAO;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGX,QAAQ,CAACM,YAAY,CAAC,CAAC,CAAC;EACvD,MAAMM,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,IAAGM,OAAO,EAAE,oBAAOJ,OAAA;IAAAQ,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACpC,IAAGP,KAAK,EAAE,oBAAOL,OAAA;IAAAQ,QAAA,EAAIH,KAAK,CAACQ;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,CAAC,CAAC;EACzC,OAAON,IAAI,CAACQ,EAAE,gBACRd,OAAA,CAACH,MAAM;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EAAA,eACXZ,OAAA,CAACJ,QAAQ;IAACmB,EAAE,EAAC,QAAQ;IAACC,OAAO;IAACC,KAAK,EAAE;MAACC,IAAI,EAAEX;IAAQ;EAAE;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,EAAC;AACpE;AAACT,EAAA,CARuBD,eAAe;EAAA,QACJP,QAAQ,EACtBG,WAAW;AAAA;AAAAqB,EAAA,GAFRjB,eAAe;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}