{"ast":null,"code":"import { __rest } from 'tslib';\nimport { ApolloLink, Observable } from 'apollo-link';\nfunction setContext(setter) {\n  return new ApolloLink(function (operation, forward) {\n    var request = __rest(operation, []);\n    return new Observable(function (observer) {\n      var handle;\n      Promise.resolve(request).then(function (req) {\n        return setter(req, operation.getContext());\n      }).then(operation.setContext).then(function () {\n        handle = forward(operation).subscribe({\n          next: observer.next.bind(observer),\n          error: observer.error.bind(observer),\n          complete: observer.complete.bind(observer)\n        });\n      }).catch(observer.error.bind(observer));\n      return function () {\n        if (handle) handle.unsubscribe();\n      };\n    });\n  });\n}\nexport { setContext };","map":{"version":3,"names":["setContext","setter","ApolloLink","operation","forward","request","__rest","Observable","observer","handle","Promise","resolve","then","req","getContext","subscribe","next","bind","error","complete","catch","unsubscribe"],"sources":["C:\\Users\\Simon\\Desktop\\twitter-clone\\frontend\\node_modules\\apollo-link-context\\src\\index.ts"],"sourcesContent":["import {\n  ApolloLink,\n  Observable,\n  Operation,\n  NextLink,\n  GraphQLRequest,\n} from 'apollo-link';\n\nexport type ContextSetter = (\n  operation: GraphQLRequest,\n  prevContext: any,\n) => Promise<any> | any;\n\nexport function setContext(setter: ContextSetter): ApolloLink {\n  return new ApolloLink((operation: Operation, forward: NextLink) => {\n    const { ...request } = operation;\n\n    return new Observable(observer => {\n      let handle;\n      Promise.resolve(request)\n        .then(req => setter(req, operation.getContext()))\n        .then(operation.setContext)\n        .then(() => {\n          handle = forward(operation).subscribe({\n            next: observer.next.bind(observer),\n            error: observer.error.bind(observer),\n            complete: observer.complete.bind(observer),\n          });\n        })\n        .catch(observer.error.bind(observer));\n\n      return () => {\n        if (handle) handle.unsubscribe();\n      };\n    });\n  });\n}\n"],"mappings":";;SAagBA,UAAUA,CAACC,MAAqB;EAC9C,OAAO,IAAIC,UAAU,CAAC,UAACC,SAAoB,EAAEC,OAAiB;IAC5D,IAAQC,OAAA,GAAAC,MAAA,CAAAH,SAAA,KAAwB;IAEhC,OAAO,IAAII,UAAU,CAAC,UAAAC,QAAQ;MAC5B,IAAIC,MAAM;MACVC,OAAO,CAACC,OAAO,CAACN,OAAO,CAAC,CACrBO,IAAI,CAAC,UAAAC,GAAG;QAAI,OAAAZ,MAAM,CAACY,GAAG,EAAEV,SAAS,CAACW,UAAU,EAAE,CAAC;MAAA,EAAC,CAChDF,IAAI,CAACT,SAAS,CAACH,UAAU,CAAC,CAC1BY,IAAI,CAAC;QACJH,MAAM,GAAGL,OAAO,CAACD,SAAS,CAAC,CAACY,SAAS,CAAC;UACpCC,IAAI,EAAER,QAAQ,CAACQ,IAAI,CAACC,IAAI,CAACT,QAAQ,CAAC;UAClCU,KAAK,EAAEV,QAAQ,CAACU,KAAK,CAACD,IAAI,CAACT,QAAQ,CAAC;UACpCW,QAAQ,EAAEX,QAAQ,CAACW,QAAQ,CAACF,IAAI,CAACT,QAAQ;SAC1C,CAAC;OACH,CAAC,CACDY,KAAK,CAACZ,QAAQ,CAACU,KAAK,CAACD,IAAI,CAACT,QAAQ,CAAC,CAAC;MAEvC,OAAO;QACL,IAAIC,MAAM,EAAEA,MAAM,CAACY,WAAW,EAAE;OACjC;KACF,CAAC;GACH,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}