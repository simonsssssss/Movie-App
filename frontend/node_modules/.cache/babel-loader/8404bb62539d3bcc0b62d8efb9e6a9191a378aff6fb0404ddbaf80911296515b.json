{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\movie-app\\\\frontend\\\\src\\\\components\\\\IsNotAuthenticated.tsx\",\n  _s = $RefreshSig$();\nimport { gql, useQuery } from '@apollo/client';\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IS_LOGGED_IN = gql`\n{\n    me {\n        id\n    }\n}\n`;\nexport default function IsNotAuthenticated() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(IS_LOGGED_IN); // loading state, error state and data returned by the query\n  const location = useLocation(); // returns the location object from the current URL\n  if (loading) return '';\n  if (error) {\n    // when not authenticated\n    return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  } else {\n    // when authenticated\n    return data.me ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/movies\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 26\n    }, this) : null;\n  }\n}\n_s(IsNotAuthenticated, \"hko0I8+Fk3gkDnLCqCPMWxAUitQ=\", false, function () {\n  return [useQuery, useLocation];\n});\n_c = IsNotAuthenticated;\nvar _c;\n$RefreshReg$(_c, \"IsNotAuthenticated\");","map":{"version":3,"names":["gql","useQuery","Navigate","Outlet","useLocation","jsxDEV","_jsxDEV","IS_LOGGED_IN","IsNotAuthenticated","_s","loading","error","data","location","fileName","_jsxFileName","lineNumber","columnNumber","me","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/movie-app/frontend/src/components/IsNotAuthenticated.tsx"],"sourcesContent":["import { gql, useQuery } from '@apollo/client';\r\nimport { Navigate, Outlet, useLocation  } from \"react-router-dom\";\r\n\r\nconst IS_LOGGED_IN = gql`\r\n{\r\n    me {\r\n        id\r\n    }\r\n}\r\n`;\r\n\r\nexport default function IsNotAuthenticated(){\r\n    const {loading, error, data} = useQuery(IS_LOGGED_IN); // loading state, error state and data returned by the query\r\n    const location = useLocation(); // returns the location object from the current URL\r\n    if(loading) return '';\r\n    if(error) { // when not authenticated\r\n        return <Outlet />;\r\n    }\r\n    else { // when authenticated\r\n        return data.me ? <Navigate to='/movies' replace /> : null;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,SAASC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAS,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,YAAY,GAAGP,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASQ,kBAAkBA,CAAA,EAAE;EAAAC,EAAA;EACxC,MAAM;IAACC,OAAO;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGX,QAAQ,CAACM,YAAY,CAAC,CAAC,CAAC;EACvD,MAAMM,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,IAAGM,OAAO,EAAE,OAAO,EAAE;EACrB,IAAGC,KAAK,EAAE;IAAE;IACR,oBAAOL,OAAA,CAACH,MAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrB,CAAC,MACI;IAAE;IACH,OAAOL,IAAI,CAACM,EAAE,gBAAGZ,OAAA,CAACJ,QAAQ;MAACiB,EAAE,EAAC,SAAS;MAACC,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,IAAI;EAC7D;AACJ;AAACR,EAAA,CAVuBD,kBAAkB;EAAA,QACPP,QAAQ,EACtBG,WAAW;AAAA;AAAAiB,EAAA,GAFRb,kBAAkB;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}