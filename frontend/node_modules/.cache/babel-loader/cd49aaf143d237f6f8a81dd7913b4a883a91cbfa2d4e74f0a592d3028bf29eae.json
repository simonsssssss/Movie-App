{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\twitter-clone\\\\frontend\\\\src\\\\App.tsx\";\nimport './App.css';\nimport { InMemoryCache } from '@apollo/client';\nimport { ApolloClient, ApolloProvider } from '@apollo/client';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Welcome from './sites/Welcome';\nimport Signup from './sites/Signup';\nimport { setContext } from 'apollo-link-context';\nimport { HttpLink } from '@apollo/client';\nimport Login from './sites/Login';\nimport IsAuthenticated from './components/IsAuthenticated';\nimport IsNotAuthenticated from './components/IsNotAuthenticated';\nimport Feed from './sites/Feed';\nimport Profile from './sites/Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4000'\n});\nconst authLink = setContext(async (request, {\n  headers\n}) => {\n  const token = localStorage.getItem('token');\n  return {\n    ...headers,\n    headers: {\n      Authorization: token ? `Bearer ${token}` : null\n    }\n  };\n});\nconst aLink = authLink.concat(httpLink);\nconst aClient = new ApolloClient({\n  link: aLink,\n  cache: new InMemoryCache()\n});\nlet profileImageBase64String = '';\nif (data.me && data.me.id) {\n  try {\n    const response = await fetch('http://localhost:4001/downloadProfileImage', {\n      // a promise that was returned by fetch() is resolved with the Response object which represents a response to a request\n      method: 'POST',\n      body: 'user_id_' + data.me.id + '_profile_image'\n    });\n    const responseData = await response.text(); // \"text()\" returns the \"Promise<string>\" type\n    profileImageBase64String = 'data:;base64,' + responseData;\n  } catch (error) {\n    console.log('Error downloading the profile image');\n  }\n}\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: aClient,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(IsAuthenticated, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 27\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/feed\",\n            element: /*#__PURE__*/_jsxDEV(Feed, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(IsNotAuthenticated, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 27\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["InMemoryCache","ApolloClient","ApolloProvider","BrowserRouter","Route","Routes","Welcome","Signup","setContext","HttpLink","Login","IsAuthenticated","IsNotAuthenticated","Feed","Profile","jsxDEV","_jsxDEV","httpLink","uri","authLink","request","headers","token","localStorage","getItem","Authorization","aLink","concat","aClient","link","cache","profileImageBase64String","data","me","id","response","fetch","method","body","responseData","text","error","console","log","App","client","children","element","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/twitter-clone/frontend/src/App.tsx"],"sourcesContent":["import './App.css';\nimport { InMemoryCache } from '@apollo/client';\nimport { ApolloClient, ApolloProvider } from '@apollo/client';\nimport { BrowserRouter, Route, Routes, Await } from 'react-router-dom';\nimport Welcome from './sites/Welcome';\nimport Signup from './sites/Signup';\nimport { setContext } from 'apollo-link-context';\nimport { HttpLink } from '@apollo/client'; \nimport Login from './sites/Login';\nimport IsAuthenticated from './components/IsAuthenticated';\nimport IsNotAuthenticated from './components/IsNotAuthenticated';\nimport Feed from './sites/Feed';\nimport Profile from './sites/Profile';\n\nconst httpLink = new HttpLink({uri:'http://localhost:4000'});\nconst authLink = setContext(async(request,{headers}) => {\n  const token = localStorage.getItem('token');\n  return {\n    ...headers,\n    headers: {\n      Authorization: token ? `Bearer ${token}` : null\n    }\n  }\n});\n\nconst aLink = authLink.concat(httpLink as any);\nconst aClient = new ApolloClient({\n  link: aLink as any,\n  cache: new InMemoryCache()\n});\n\nlet profileImageBase64String = '';\nif(data.me && data.me.id) {\n  try {\n      const response = await fetch('http://localhost:4001/downloadProfileImage', { // a promise that was returned by fetch() is resolved with the Response object which represents a response to a request\n          method: 'POST',\n          body: 'user_id_' + data.me.id + '_profile_image'\n      });\n      const responseData = await response.text(); // \"text()\" returns the \"Promise<string>\" type\n      profileImageBase64String = 'data:;base64,' + responseData;\n  }\n  catch(error) {\n      console.log('Error downloading the profile image');\n  }\n}\n\nfunction App() {\n  return (\n    <ApolloProvider client={aClient}>\n      <BrowserRouter>\n        <Routes>\n          <Route element={<IsAuthenticated />}>\n            <Route path='/feed' element={<Feed />} />\n            {/*@ts-expect-error Async Server Component*/}\n            <Route path='/profile' element={<Profile />} />\n          </Route>\n          <Route element={<IsNotAuthenticated />}>\n            <Route path='/' element={<Welcome />} />\n            <Route path=\"/signup\" element={<Signup />} />\n            <Route path=\"/login\" element={<Login />} />\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}