{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\movie-app\\\\frontend\\\\src\\\\sites\\\\Movies.tsx\",\n  _s = $RefreshSig$();\nimport '../styles/Movies.css';\nimport Modal from 'react-modal';\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport { useState, useRef } from 'react';\nimport { modalStyles } from '../styles/ModalStyles';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { GET_USER_DATA_QUERY } from './Signup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n  const RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY = gql`\n    query RetrieveCurrentAccountDataQuery {\n        me {\n          email\n          name\n        }\n    }\n    `;\n  const UPDATE_USER_MUTATION = gql`\n    mutation updateUser($email: String, $name: String) {\n      updateUser(email: $email, name: $name) {\n        id\n      }\n    }\n    `;\n  const [areSubmittedDetailsSame, setAreSubmittedDetailsSame] = useState(false);\n  const formikReference = useRef(null);\n  const [mutateCreateOrUpdateProfile] = useMutation(CREATE_PROFILE_MUTATION, {\n    // returns a tuple but we only get one item\n    refetchQueries: [{\n      query: GET_USER_DATA_QUERY\n    }] // updates the client's cache with fresh data\n  });\n  const {\n    data\n  } = useQuery(RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY);\n  const {\n    data: allUsersData\n  } = useQuery(GET_USER_DATA_QUERY);\n  let accountFormInitialValues = {\n    email: '',\n    name: ''\n  };\n  if (data && data.me) {\n    accountFormInitialValues = {\n      email: data.me.email,\n      name: data.me.name\n    };\n  }\n  const newPasswordFormInitialValues = {\n    password: '',\n    confirmPassword: ''\n  };\n  const accountFormValidationSchema = yup.object({\n    email: yup.string().email(\"Invalid email address\").required(\"Email required\") // defines a string schema\n    .test('check-if-email-already-exists', 'Email already exists', function (value) {\n      let emailAlreadyExists = false;\n      if (allUsersData && allUsersData.users && data && data.me) {\n        allUsersData.users.forEach(function (user) {\n          if (user.email === value && data.me.email !== value) {\n            emailAlreadyExists = true;\n          }\n        });\n      }\n      if (emailAlreadyExists) {\n        return false; // returns a message \"Email already exists\"\n      }\n      return true;\n    }),\n    name: yup.string().max(15, \"15 characters or less\").required(\"Name required\")\n  });\n  const newPasswordFormValidationSchema = yup.object({\n    password: yup.string().max(20, '20 characters or less').required(\"Password required\"),\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\")], \"Passwords must match\").required(\"Confirm password\") // if password field has null value\n  });\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  const closeModal = () => {\n    removeSubmittedDetailsAreTheSameErrorMessage();\n    setIsOpen(false);\n  };\n  function logOut() {\n    localStorage.removeItem(\"Movie App Authentication Token\");\n    window.location.reload();\n  }\n  function checkIfSubmittedDetailsAreSame() {\n    if (data && data.me && formikReference.current.values.email && formikReference.current.values.name) {\n      if (data.me.email === formikReference.current.values.email && data.me.name === formikReference.current.values.name) {\n        setAreSubmittedDetailsSame(true);\n      }\n    }\n  }\n  function removeSubmittedDetailsAreTheSameErrorMessage() {\n    setAreSubmittedDetailsSame(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"movies-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/movies\",\n          className: \"movies-a\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            id: \"movies-logo-icon\",\n            className: \"fa-solid fa-film\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"movies-search-field\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"movies-form-search\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"movies-input-search\",\n            type: \"text\",\n            placeholder: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"movies-user-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"movies-user-icon-i\",\n          className: \"fa-solid fa-circle-user\",\n          \"aria-hidden\": \"true\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-user-icon-dropdown-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movies-user-icon-dropdown-content-item\",\n              onClick: openModal,\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              closeTimeoutMS: 60,\n              isOpen: modalIsOpen,\n              onRequestClose: closeModal,\n              style: modalStyles,\n              ariaHideApp: false,\n              children: [/*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: accountFormInitialValues,\n                validationSchema: accountFormValidationSchema,\n                innerRef: formikReference,\n                onSubmit: async (values, {\n                  setSubmitting\n                }) => {\n                  checkIfSubmittedDetailsAreSame();\n                  setAreSubmittedDetailsSame(areSubmittedDetailsSame => {\n                    // Use the callback function to access the updated value\n                    if (!areSubmittedDetailsSame) {\n                      setSubmitting(true);\n                      setSubmitting(false);\n                      closeModal();\n                    }\n                    return areSubmittedDetailsSame; // Return the updated value to maintain the state\n                  });\n                },\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  className: \"movies-form-account\",\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: \"email\",\n                    className: \"movies-input-account\",\n                    type: \"text\",\n                    onKeyDown: removeSubmittedDetailsAreTheSameErrorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"email\",\n                    className: \"movies-input-account-error-message\",\n                    component: 'div'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"name\",\n                    className: \"movies-input-account\",\n                    type: \"text\",\n                    onKeyDown: removeSubmittedDetailsAreTheSameErrorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"name\",\n                    className: \"movies-input-account-error-message\",\n                    component: 'div'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 21\n                  }, this), areSubmittedDetailsSame ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"movies-input-account-error-message\",\n                    children: \"Submitted details are the same as current details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 23\n                  }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"movies-button-account\",\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: newPasswordFormInitialValues,\n                validationSchema: newPasswordFormValidationSchema,\n                onSubmit: async (values, {\n                  setSubmitting\n                }) => {\n                  setSubmitting(true);\n                  setSubmitting(false);\n                  closeModal();\n                },\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  className: \"movies-form-account\",\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: \"password\",\n                    className: \"movies-input-account\",\n                    type: \"password\",\n                    placeholder: \"New password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"password\",\n                    className: \"movies-input-account-error-message\",\n                    component: 'div'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"confirmPassword\",\n                    className: \"movies-input-account\",\n                    type: \"password\",\n                    placeholder: \"Confirm password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"confirmPassword\",\n                    className: \"movies-input-account-error-message\",\n                    component: 'div'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"movies-button-account\",\n                    children: \"Update password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movies-user-icon-dropdown-content-item\",\n              onClick: logOut,\n              children: \"Log out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-movies-list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(Movies, \"HvKuxt/XKke85uSoyMGH5I0SpYU=\", false, function () {\n  return [useMutation, useQuery, useQuery];\n});\n_c = Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["Modal","gql","useQuery","useMutation","useState","useRef","modalStyles","Formik","Form","Field","ErrorMessage","yup","GET_USER_DATA_QUERY","jsxDEV","_jsxDEV","Movies","_s","RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY","UPDATE_USER_MUTATION","areSubmittedDetailsSame","setAreSubmittedDetailsSame","formikReference","mutateCreateOrUpdateProfile","CREATE_PROFILE_MUTATION","refetchQueries","query","data","allUsersData","accountFormInitialValues","email","name","me","newPasswordFormInitialValues","password","confirmPassword","accountFormValidationSchema","object","string","required","test","value","emailAlreadyExists","users","forEach","user","max","newPasswordFormValidationSchema","oneOf","ref","modalIsOpen","setIsOpen","openModal","closeModal","removeSubmittedDetailsAreTheSameErrorMessage","logOut","localStorage","removeItem","window","location","reload","checkIfSubmittedDetailsAreSame","current","values","className","children","href","id","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","closeTimeoutMS","isOpen","onRequestClose","style","ariaHideApp","initialValues","validationSchema","innerRef","onSubmit","setSubmitting","onKeyDown","component","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/movie-app/frontend/src/sites/Movies.tsx"],"sourcesContent":["import '../styles/Movies.css';\r\nimport Modal from 'react-modal';\r\nimport { gql, useQuery, useMutation } from '@apollo/client';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { modalStyles } from '../styles/ModalStyles';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { GET_USER_DATA_QUERY} from './Signup';\r\n\r\nexport default function Movies() {\r\n  const RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY = gql`\r\n    query RetrieveCurrentAccountDataQuery {\r\n        me {\r\n          email\r\n          name\r\n        }\r\n    }\r\n    `\r\n    ;\r\n  const UPDATE_USER_MUTATION = gql`\r\n    mutation updateUser($email: String, $name: String) {\r\n      updateUser(email: $email, name: $name) {\r\n        id\r\n      }\r\n    }\r\n    `\r\n    ;\r\n  const [areSubmittedDetailsSame, setAreSubmittedDetailsSame] = useState(false);\r\n  const formikReference = useRef(null);\r\n  const [mutateCreateOrUpdateProfile] = useMutation(CREATE_PROFILE_MUTATION, { // returns a tuple but we only get one item\r\n    refetchQueries: [{query: GET_USER_DATA_QUERY}] // updates the client's cache with fresh data\r\n  });\r\n  const {data} = useQuery(RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY);\r\n  const {data: allUsersData} = useQuery(GET_USER_DATA_QUERY);\r\n  let accountFormInitialValues = {\r\n    email: '',\r\n    name: ''\r\n  };\r\n  if(data && data.me) {\r\n    accountFormInitialValues = {\r\n      email: data.me.email,\r\n      name: data.me.name\r\n    };\r\n  }\r\n  const newPasswordFormInitialValues = {\r\n    password: '',\r\n    confirmPassword: ''\r\n  };\r\n  const accountFormValidationSchema = yup.object({\r\n    email: yup.string().email(\"Invalid email address\").required(\"Email required\") // defines a string schema\r\n            .test('check-if-email-already-exists', 'Email already exists',\r\n              function(value) {\r\n                let emailAlreadyExists = false;\r\n                if(allUsersData && allUsersData.users && data && data.me) {\r\n                  allUsersData.users.forEach(function(user: any) {\r\n                      if(user.email === value && data.me.email !== value) {\r\n                          emailAlreadyExists = true;\r\n                      }\r\n                  });\r\n                }\r\n                if(emailAlreadyExists) {\r\n                  return false; // returns a message \"Email already exists\"\r\n                }\r\n                return true;\r\n              }),\r\n    name: yup.string().max(15,\"15 characters or less\").required(\"Name required\")\r\n  });\r\n  const newPasswordFormValidationSchema = yup.object({\r\n    password: yup.string().max(20, '20 characters or less').required(\"Password required\"),\r\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\")],\"Passwords must match\").required(\"Confirm password\") // if password field has null value\r\n  });\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    removeSubmittedDetailsAreTheSameErrorMessage();\r\n    setIsOpen(false);\r\n  };\r\n  function logOut() {\r\n    localStorage.removeItem(\"Movie App Authentication Token\");\r\n    window.location.reload();\r\n  }\r\n  function checkIfSubmittedDetailsAreSame() {\r\n    if(data && data.me && formikReference.current.values.email && formikReference.current.values.name) {\r\n      if(data.me.email === formikReference.current.values.email && data.me.name === formikReference.current.values.name) {\r\n        setAreSubmittedDetailsSame(true);\r\n      }\r\n    }\r\n  }\r\n  function removeSubmittedDetailsAreTheSameErrorMessage() {\r\n    setAreSubmittedDetailsSame(false);\r\n  }\r\n  return (\r\n    <div className=\"movies-container\">\r\n      <div className=\"movies-navbar\">\r\n        <span className=\"movies-logo\">\r\n          <a href='/movies' className=\"movies-a\">\r\n            <i id=\"movies-logo-icon\" className=\"fa-solid fa-film\" aria-hidden=\"true\"></i>\r\n          </a>\r\n        </span>\r\n        <span className=\"movies-search-field\">\r\n          <form className='movies-form-search'>\r\n            <input className='movies-input-search' type=\"text\" placeholder=\"Search...\"></input>\r\n          </form>\r\n        </span>\r\n        <span className=\"movies-user-icon\">\r\n          <i id=\"movies-user-icon-i\" className=\"fa-solid fa-circle-user\" aria-hidden=\"true\">\r\n            <div className='movies-user-icon-dropdown-content'>\r\n              <div className='movies-user-icon-dropdown-content-item' onClick={openModal}>Account</div>\r\n              <Modal closeTimeoutMS={60} isOpen={modalIsOpen} onRequestClose={closeModal} style={modalStyles} ariaHideApp={false}>\r\n                <Formik initialValues={accountFormInitialValues} validationSchema={accountFormValidationSchema} innerRef={formikReference} onSubmit={async (values,{setSubmitting}) => {\r\n                    checkIfSubmittedDetailsAreSame();\r\n                    setAreSubmittedDetailsSame(areSubmittedDetailsSame => { // Use the callback function to access the updated value\r\n                      if(!areSubmittedDetailsSame) {\r\n                        setSubmitting(true);\r\n                        setSubmitting(false);\r\n                        closeModal();\r\n                      }\r\n                      return areSubmittedDetailsSame; // Return the updated value to maintain the state\r\n                    });\r\n                }}>\r\n                  <Form className='movies-form-account'>\r\n                    <Field name='email' className='movies-input-account' type=\"text\" onKeyDown={removeSubmittedDetailsAreTheSameErrorMessage}></Field>\r\n                    <ErrorMessage name='email' className='movies-input-account-error-message' component={'div'} />\r\n                    <Field name='name' className='movies-input-account' type=\"text\" onKeyDown={removeSubmittedDetailsAreTheSameErrorMessage}></Field>\r\n                    <ErrorMessage name='name' className='movies-input-account-error-message' component={'div'} />\r\n                    {areSubmittedDetailsSame ? (\r\n                      <div className='movies-input-account-error-message'>Submitted details are the same as current details</div>\r\n                    ) : null}\r\n                    <button type=\"submit\" className='movies-button-account'>Update</button>\r\n                  </Form>\r\n                </Formik>\r\n                <br />\r\n                <Formik initialValues={newPasswordFormInitialValues} validationSchema={newPasswordFormValidationSchema} onSubmit={async (values,{setSubmitting}) => {\r\n                    setSubmitting(true);\r\n                    setSubmitting(false);\r\n                    closeModal();\r\n                }}>\r\n                  <Form className='movies-form-account'>\r\n                    <Field name='password' className='movies-input-account' type=\"password\" placeholder='New password'></Field>\r\n                    <ErrorMessage name='password' className='movies-input-account-error-message' component={'div'} />\r\n                    <Field name='confirmPassword' className='movies-input-account' type=\"password\" placeholder='Confirm password'></Field>\r\n                    <ErrorMessage name='confirmPassword' className='movies-input-account-error-message' component={'div'} />\r\n                    <button type=\"submit\" className='movies-button-account'>Update password</button>\r\n                  </Form>\r\n                </Formik>\r\n              </Modal>\r\n              <div className='movies-user-icon-dropdown-content-item' onClick={logOut}>Log out</div>\r\n            </div>\r\n          </i>\r\n        </span>\r\n      </div>\r\n      <div className='movies-movies-list'>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}