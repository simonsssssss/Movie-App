{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\twitter-clone\\\\twitter-clone-frontend\\\\src\\\\sites\\\\Signup.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { gql, useMutation } from '@apollo/client';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNUP_MUTATION = gql`\nmutation signup($name: String, $email: String!, $password: String!){\n    signup(name: $name, email: $email, password: $password){\n        token\n    }\n}\n`;\nfunction Signup() {\n  _s();\n  const navigate = useNavigate();\n  const [signup, {\n    data\n  }] = useMutation(SIGNUP_MUTATION); // returns a tuple consisting of a mutate function that you can call at any time to execute the mutation and an object with fields that represent the current status of the mutation's execution (data, loading, etc.)\n  const initialValues = {\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: ''\n  };\n  const validationSchema = yup.object({\n    email: yup.string().email(\"Invalid email address\").required(\"Email required\"),\n    // defines a string schema\n    password: yup.string().max(20, '20 characters or less').required(\"Password required\"),\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\")], \"Passwords must match\"),\n    // if password field has null value\n    name: yup.string().max(15, \"15 characters or less\").required(\"Name required.\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: async (values, {\n        setSubmitting\n      }) => {\n        setSubmitting(true);\n        const response = await signup({\n          variables: values\n        });\n        localStorage.setItem(\"token\", response.data.signup.token);\n        setSubmitting(false);\n        navigate('/');\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"text\",\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: 'div'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\",\n          component: 'div'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: 'div'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Field, {\n          name: \"confirmPassword\",\n          type: \"password\",\n          placeholder: \"confirmPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"confirmPassword\",\n          component: 'div'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Signup, \"Is02b87W6HNNbvsR9kgGN0eHn3I=\", false, function () {\n  return [useNavigate, useMutation];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","gql","useMutation","ErrorMessage","Field","Form","Formik","yup","useNavigate","jsxDEV","_jsxDEV","SIGNUP_MUTATION","Signup","_s","navigate","signup","data","initialValues","email","password","confirmPassword","name","validationSchema","object","string","required","max","oneOf","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","values","setSubmitting","response","variables","localStorage","setItem","token","type","placeholder","component","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/twitter-clone/twitter-clone-frontend/src/sites/Signup.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik'; \r\nimport * as yup from 'yup';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Sign } from \"crypto\";\r\n\r\nconst SIGNUP_MUTATION = gql`\r\nmutation signup($name: String, $email: String!, $password: String!){\r\n    signup(name: $name, email: $email, password: $password){\r\n        token\r\n    }\r\n}\r\n`;\r\n\r\ninterface SignupValues{\r\n    email: string,\r\n    password: string,\r\n    confirmPassword: string,\r\n    name: string\r\n}\r\n\r\nfunction Signup(){\r\n    const navigate = useNavigate();\r\n    const [signup,{data}] = useMutation(SIGNUP_MUTATION); // returns a tuple consisting of a mutate function that you can call at any time to execute the mutation and an object with fields that represent the current status of the mutation's execution (data, loading, etc.)\r\n    const initialValues: SignupValues = {\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        name: ''\r\n    }\r\n    const validationSchema = yup.object({\r\n        email: yup.string().email(\"Invalid email address\").required(\"Email required\"), // defines a string schema\r\n        password: yup.string().max(20, '20 characters or less').required(\"Password required\"),\r\n        confirmPassword: yup.string().oneOf([yup.ref(\"password\")],\"Passwords must match\"), // if password field has null value\r\n        name: yup.string().max(15,\"15 characters or less\").required(\"Name required.\")\r\n    })\r\n    return(\r\n        <div>\r\n            <h1>Sign up</h1>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={async(values,{setSubmitting}) => {\r\n                    setSubmitting(true);\r\n                    const response = await signup({\r\n                        variables: values\r\n                    });\r\n                    localStorage.setItem(\"token\", response.data.signup.token);\r\n                    setSubmitting(false);\r\n                    navigate('/');\r\n                }}>\r\n                    <Form>\r\n                        <Field name=\"email\" type=\"text\" placeholder=\"email\" />\r\n                        <ErrorMessage name=\"email\" component={'div'} />\r\n                        <Field name=\"name\" type=\"text\" placeholder=\"name\" />\r\n                        <ErrorMessage name=\"name\" component={'div'} />\r\n                        <Field name=\"password\" type=\"password\" placeholder=\"password\" />\r\n                        <ErrorMessage name=\"password\" component={'div'} /> {/* component for rendering a message */}\r\n                        <Field name=\"confirmPassword\" type=\"password\" placeholder=\"confirmPassword\" />\r\n                        <ErrorMessage name=\"confirmPassword\" component={'div'} />\r\n                        <button type=\"submit\">Sign Up</button>\r\n                    </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}