{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\twitter-clone\\\\frontend\\\\src\\\\components\\\\CreateProfile.tsx\",\n  _s = $RefreshSig$();\nimport { gql, useMutation } from '@apollo/client';\nimport { ME_QUERY } from '../sites/Profile';\nimport { useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport Modal from 'react-modal';\nimport { customStyles } from '../styles/CustomModalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_PROFILE_MUTATION = gql`\n    mutation createProfile(\n        $bio: String\n        $location: String\n        $website: String\n        $avatar: String\n    ) {\n        createProfile(\n            bio: $bio\n            location: $location\n            website: $website\n            avatar: $avatar\n        ) {\n            id\n        }\n    }\n`;\nfunction CreateProfile() {\n  _s();\n  const [createProfile] = useMutation(CREATE_PROFILE_MUTATION, {\n    // returns a tuple but we only get one item\n    refetchQueries: [{\n      query: ME_QUERY\n    }] // updates the client's cache with fresh data\n  });\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const initialValues = {\n    bio: \"\",\n    location: \"\",\n    website: \"\",\n    avatar: \"\"\n  };\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      children: \"Create Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen // describes if the modal should be shown\n      ,\n      onRequestClose: closeModal // function that will be run when the modal is requested to be closed\n      ,\n      contentLabel: \"Modal\" // string for modal label\n      ,\n      style: customStyles // styles for the modal\n      ,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues\n        //validationSchema={validationSchema}\n        ,\n        onSubmit: async (values, {\n          setSubmitting\n        }) => {\n          setSubmitting(true);\n          await createProfile({\n            variables: values\n          });\n          setSubmitting(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"bio\",\n            type: \"text\",\n            as: \"textArea\",\n            placeholder: \"Bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"bio\",\n            component: 'div'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"location\",\n            type: \"location\",\n            placeholder: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"location\",\n            component: 'div'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Field, {\n            name: \"website\",\n            type: \"website\",\n            placeholder: \"Website\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"website\",\n            component: 'div'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"login-button\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Create Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateProfile, \"HZRSlC7LIICZhOPrQ4pIGPjykBg=\", false, function () {\n  return [useMutation];\n});\n_c = CreateProfile;\nexport default CreateProfile;\nvar _c;\n$RefreshReg$(_c, \"CreateProfile\");","map":{"version":3,"names":["gql","useMutation","ME_QUERY","useState","ErrorMessage","Field","Form","Formik","Modal","customStyles","jsxDEV","_jsxDEV","CREATE_PROFILE_MUTATION","CreateProfile","_s","createProfile","refetchQueries","query","modalIsOpen","setIsOpen","initialValues","bio","location","website","avatar","openModal","closeModal","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","contentLabel","style","onSubmit","values","setSubmitting","variables","name","type","as","placeholder","component","className","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/twitter-clone/frontend/src/components/CreateProfile.tsx"],"sourcesContent":["import { gql, useMutation } from '@apollo/client';\r\nimport { ME_QUERY } from '../sites/Profile';\r\nimport { useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport Modal from 'react-modal';\r\nimport { customStyles } from '../styles/CustomModalStyles';\r\n\r\nconst CREATE_PROFILE_MUTATION = gql`\r\n    mutation createProfile(\r\n        $bio: String\r\n        $location: String\r\n        $website: String\r\n        $avatar: String\r\n    ) {\r\n        createProfile(\r\n            bio: $bio\r\n            location: $location\r\n            website: $website\r\n            avatar: $avatar\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`\r\n;\r\n\r\ninterface ProfileValues {\r\n    bio: string,\r\n    location: string,\r\n    website: string,\r\n    avatar: string\r\n}\r\n\r\nfunction CreateProfile() {\r\n    const [createProfile] = useMutation(CREATE_PROFILE_MUTATION, { // returns a tuple but we only get one item\r\n        refetchQueries: [{query: ME_QUERY}] // updates the client's cache with fresh data\r\n    });\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const initialValues : ProfileValues = {\r\n        bio: \"\",\r\n        location: \"\",\r\n        website: \"\",\r\n        avatar: \"\"\r\n    };\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    }\r\n  return (\r\n    <div>\r\n        <button onClick={openModal}>Create Profile</button>\r\n        <Modal isOpen={modalIsOpen} // describes if the modal should be shown\r\n            onRequestClose={closeModal} // function that will be run when the modal is requested to be closed\r\n            contentLabel=\"Modal\" // string for modal label\r\n            style={customStyles} // styles for the modal\r\n            >\r\n        <Formik\r\n            initialValues={initialValues}\r\n            //validationSchema={validationSchema}\r\n            onSubmit={async (values,{setSubmitting}) => {\r\n                setSubmitting(true);\r\n                await createProfile({ variables: values});\r\n                setSubmitting(false);\r\n            }}>\r\n                <Form>\r\n                    <Field name=\"bio\" type=\"text\" as=\"textArea\" placeholder=\"Bio\" />\r\n                    <ErrorMessage name=\"bio\" component={'div'} />\r\n                    <Field name=\"location\" type=\"location\" placeholder=\"Location\" />\r\n                    <ErrorMessage name=\"location\" component={'div'} /> {/* component for rendering a message */}\r\n                    <Field name=\"website\" type=\"website\" placeholder=\"Website\" />\r\n                    <ErrorMessage name=\"website\" component={'div'} />\r\n                    <button type=\"submit\" className=\"login-button\"><span>Create Profile</span></button>\r\n                </Form>\r\n        </Formik>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateProfile;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}