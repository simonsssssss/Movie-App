{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\twitter-clone\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { InMemoryCache, useQuery } from '@apollo/client';\nimport { ApolloClient, ApolloProvider } from '@apollo/client';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Welcome from './sites/Welcome';\nimport Signup from './sites/Signup';\nimport { setContext } from 'apollo-link-context';\nimport { HttpLink } from '@apollo/client';\nimport Login from './sites/Login';\nimport IsAuthenticated from './components/IsAuthenticated';\nimport IsNotAuthenticated from './components/IsNotAuthenticated';\nimport Feed from './sites/Feed';\nimport Profile from './sites/Profile';\nimport { PROFILE_USER_QUERY } from './sites/Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4000'\n});\nconst authLink = setContext(async (request, {\n  headers\n}) => {\n  const token = localStorage.getItem('token');\n  return {\n    ...headers,\n    headers: {\n      Authorization: token ? `Bearer ${token}` : null\n    }\n  };\n});\nconst aLink = authLink.concat(httpLink);\nconst aClient = new ApolloClient({\n  link: aLink,\n  cache: new InMemoryCache()\n});\nasync function downloadProfileImage() {\n  _s();\n  let profileImageBase64String = '';\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PROFILE_USER_QUERY);\n  if (data.me && data.me.id) {\n    try {\n      const response = await fetch('http://localhost:4001/downloadProfileImage', {\n        // a promise that was returned by fetch() is resolved with the Response object which represents a response to a request\n        method: 'POST',\n        body: 'user_id_' + data.me.id + '_profile_image'\n      });\n      const responseData = await response.text(); // \"text()\" returns the \"Promise<string>\" type\n      profileImageBase64String = 'data:;base64,' + responseData;\n    } catch (error) {\n      console.log('Error downloading the profile image');\n    }\n  }\n}\n_s(downloadProfileImage, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: aClient,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(IsAuthenticated, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 27\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/feed\",\n            element: /*#__PURE__*/_jsxDEV(Feed, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(IsNotAuthenticated, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 27\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["InMemoryCache","useQuery","ApolloClient","ApolloProvider","BrowserRouter","Route","Routes","Welcome","Signup","setContext","HttpLink","Login","IsAuthenticated","IsNotAuthenticated","Feed","Profile","PROFILE_USER_QUERY","jsxDEV","_jsxDEV","httpLink","uri","authLink","request","headers","token","localStorage","getItem","Authorization","aLink","concat","aClient","link","cache","downloadProfileImage","_s","profileImageBase64String","loading","error","data","me","id","response","fetch","method","body","responseData","text","console","log","App","client","children","element","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/twitter-clone/frontend/src/App.tsx"],"sourcesContent":["import './App.css';\nimport { InMemoryCache, useQuery } from '@apollo/client';\nimport { ApolloClient, ApolloProvider } from '@apollo/client';\nimport { BrowserRouter, Route, Routes, Await } from 'react-router-dom';\nimport Welcome from './sites/Welcome';\nimport Signup from './sites/Signup';\nimport { setContext } from 'apollo-link-context';\nimport { HttpLink } from '@apollo/client'; \nimport Login from './sites/Login';\nimport IsAuthenticated from './components/IsAuthenticated';\nimport IsNotAuthenticated from './components/IsNotAuthenticated';\nimport Feed from './sites/Feed';\nimport Profile from './sites/Profile';\nimport { PROFILE_USER_QUERY } from './sites/Profile';\n\nconst httpLink = new HttpLink({uri:'http://localhost:4000'});\nconst authLink = setContext(async(request,{headers}) => {\n  const token = localStorage.getItem('token');\n  return {\n    ...headers,\n    headers: {\n      Authorization: token ? `Bearer ${token}` : null\n    }\n  }\n});\n\nconst aLink = authLink.concat(httpLink as any);\nconst aClient = new ApolloClient({\n  link: aLink as any,\n  cache: new InMemoryCache()\n});\n\nasync function downloadProfileImage() {\n  let profileImageBase64String = '';\n  const {loading, error, data} = useQuery(PROFILE_USER_QUERY);\n  if(data.me && data.me.id) {\n    try {\n        const response = await fetch('http://localhost:4001/downloadProfileImage', { // a promise that was returned by fetch() is resolved with the Response object which represents a response to a request\n            method: 'POST',\n            body: 'user_id_' + data.me.id + '_profile_image'\n        });\n        const responseData = await response.text(); // \"text()\" returns the \"Promise<string>\" type\n        profileImageBase64String = 'data:;base64,' + responseData;\n    }\n    catch(error) {\n        console.log('Error downloading the profile image');\n    }\n  }\n}\n\nfunction App() {\n  return (\n    <ApolloProvider client={aClient}>\n      <BrowserRouter>\n        <Routes>\n          <Route element={<IsAuthenticated />}>\n            <Route path='/feed' element={<Feed />} />\n            {/*@ts-expect-error Async Server Component*/}\n            <Route path='/profile' element={<Profile />} />\n          </Route>\n          <Route element={<IsNotAuthenticated />}>\n            <Route path='/' element={<Welcome />} />\n            <Route path=\"/signup\" element={<Signup />} />\n            <Route path=\"/login\" element={<Login />} />\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}