{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\twitter-clone\\\\frontend\\\\src\\\\components\\\\CreateOrUpdateProfile.tsx\",\n  _s = $RefreshSig$();\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { PROFILE_QUERY } from '../sites/Profile';\nimport { useState } from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport Modal from 'react-modal';\nimport { modalStyles } from '../styles/ModalStyles';\nimport '../styles/CreateOrUpdateProfile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_PROFILE_MUTATION = gql`\n    mutation CreateOrUpdateProfile(\n        $bio: String\n        $location: String\n        $website: String\n    ) { CreateOrUpdateProfile(\n            bio: $bio\n            location: $location\n            website: $website\n        ) {\n            id\n        }\n    }\n`;\nfunction CreateOrUpdateProfile() {\n  _s();\n  const [mutateCreateOrUpdateProfile] = useMutation(CREATE_PROFILE_MUTATION, {\n    // returns a tuple but we only get one item\n    refetchQueries: [{\n      query: PROFILE_QUERY\n    }] // updates the client's cache with fresh data\n  });\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const initialValues = {\n    bio: \"\",\n    location: \"\",\n    website: \"\",\n    avatar: \"\"\n  };\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PROFILE_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 22\n  }, this);\n  const initialValuesForUpdate = {\n    bio: data.Profile.bio,\n    location: data.Profile.location,\n    website: data.Profile.website,\n    avatar: \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.Profile ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      className: \"profile-create-edit-profile-button\",\n      children: \"Update profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      className: \"profile-create-edit-profile-button\",\n      children: \"Create profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen // describes if the modal should be shown\n      ,\n      onRequestClose: closeModal // function that will be run when the modal is requested to be closed\n      ,\n      contentLabel: \"Modal\" // string for modal label\n      ,\n      style: modalStyles // styles for the modal\n      ,\n      ariaHideApp: false // Boolean indicating if the appElement should be hidden\n      ,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: data.Profile ? initialValuesForUpdate : initialValues,\n        onSubmit: async (values, {\n          setSubmitting\n        }) => {\n          setSubmitting(true);\n          await mutateCreateOrUpdateProfile({\n            variables: values\n          });\n          setSubmitting(false);\n          closeModal();\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"profile-form\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"bio\",\n            type: \"text\",\n            as: \"textarea\",\n            placeholder: \"Bio\",\n            className: \"profile-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"location\",\n            type: \"text\",\n            placeholder: \"Location\",\n            className: \"profile-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"website\",\n            type: \"text\",\n            placeholder: \"Website\",\n            className: \"profile-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"login-button\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"profile-span\",\n              children: data.Profile ? `Update Profile` : `Create Update`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateOrUpdateProfile, \"Ee8ETQBgBqEIbvr+OpJQEoTToSM=\", false, function () {\n  return [useMutation, useQuery];\n});\n_c = CreateOrUpdateProfile;\nexport default CreateOrUpdateProfile;\nvar _c;\n$RefreshReg$(_c, \"CreateOrUpdateProfile\");","map":{"version":3,"names":["gql","useMutation","useQuery","PROFILE_QUERY","useState","Field","Form","Formik","Modal","modalStyles","jsxDEV","_jsxDEV","CREATE_PROFILE_MUTATION","CreateOrUpdateProfile","_s","mutateCreateOrUpdateProfile","refetchQueries","query","modalIsOpen","setIsOpen","initialValues","bio","location","website","avatar","openModal","closeModal","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","message","initialValuesForUpdate","Profile","onClick","className","isOpen","onRequestClose","contentLabel","style","ariaHideApp","onSubmit","values","setSubmitting","variables","name","type","as","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/twitter-clone/frontend/src/components/CreateOrUpdateProfile.tsx"],"sourcesContent":["import { gql, useMutation, useQuery } from '@apollo/client';\r\nimport { PROFILE_QUERY } from '../sites/Profile';\r\nimport { useState } from 'react';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport Modal from 'react-modal';\r\nimport { modalStyles } from '../styles/ModalStyles';\r\nimport '../styles/CreateOrUpdateProfile.css';\r\n\r\nconst CREATE_PROFILE_MUTATION = gql`\r\n    mutation CreateOrUpdateProfile(\r\n        $bio: String\r\n        $location: String\r\n        $website: String\r\n    ) { CreateOrUpdateProfile(\r\n            bio: $bio\r\n            location: $location\r\n            website: $website\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`\r\n;\r\n\r\ninterface ProfileValues {\r\n    bio: string,\r\n    location: string,\r\n    website: string,\r\n    avatar: string\r\n}\r\n\r\nfunction CreateOrUpdateProfile() {\r\n    const [mutateCreateOrUpdateProfile] = useMutation(CREATE_PROFILE_MUTATION, { // returns a tuple but we only get one item\r\n        refetchQueries: [{query: PROFILE_QUERY}] // updates the client's cache with fresh data\r\n    });\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const initialValues : ProfileValues = {\r\n        bio: \"\",\r\n        location: \"\",\r\n        website: \"\",\r\n        avatar: \"\"\r\n    };\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    }\r\n    const {loading,error,data} = useQuery(PROFILE_QUERY);\r\n    if(loading) return <p>Loading...</p>;\r\n    if(error) return <p>{error.message}</p>;\r\n    const initialValuesForUpdate : ProfileValues = {\r\n        bio: data.Profile.bio,\r\n        location: data.Profile.location,\r\n        website: data.Profile.website,\r\n        avatar: \"\"\r\n    };\r\n  return (\r\n    <div>\r\n        {data.Profile ?\r\n        (<button onClick={openModal} className='profile-create-edit-profile-button'>Update profile</button>)\r\n        : (<button onClick={openModal} className='profile-create-edit-profile-button'>Create profile</button>)}\r\n        <Modal isOpen={modalIsOpen} // describes if the modal should be shown\r\n            onRequestClose={closeModal} // function that will be run when the modal is requested to be closed\r\n            contentLabel=\"Modal\" // string for modal label\r\n            style={modalStyles} // styles for the modal\r\n            ariaHideApp={false} // Boolean indicating if the appElement should be hidden\r\n            >\r\n        <Formik\r\n            initialValues={data.Profile ? initialValuesForUpdate : initialValues}\r\n            onSubmit={async (values,{setSubmitting}) => {\r\n                setSubmitting(true);\r\n                await mutateCreateOrUpdateProfile({ variables: values});\r\n                setSubmitting(false);\r\n                closeModal();\r\n            }}>\r\n                <Form className='profile-form'>\r\n                    <Field name=\"bio\" type=\"text\" as=\"textarea\" placeholder=\"Bio\" className='profile-field' />\r\n                    <Field name=\"location\" type=\"text\" placeholder=\"Location\" className='profile-field' />\r\n                    <Field name=\"website\" type=\"text\" placeholder=\"Website\" className='profile-field' />\r\n                    <button type=\"submit\" className=\"login-button\"><span className='profile-span'>{data.Profile ? `Update Profile` : `Create Update`}</span></button>\r\n                </Form>\r\n        </Formik>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateOrUpdateProfile;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}