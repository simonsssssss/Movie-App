{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\twitter-clone\\\\twitter-clone-frontend\\\\src\\\\components\\\\IsAuthenticated.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IS_LOGGED_IN = gql`\n{\n    me {\n        id\n    }\n}\n`;\nexport default function IsAuthenticated({\n  children\n}) {\n  _s();\n  // the whole object is of type \"Properties\" but only \"children\" properties will be extracted\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(IS_LOGGED_IN); // loading state, error state and data returned by the query\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 22\n  }, this);\n  /*if(!data.me){ // in case of no data\r\n      return <Navigate to=\"/home\" />;\r\n  }*/\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n}\n_s(IsAuthenticated, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n_c = IsAuthenticated;\nvar _c;\n$RefreshReg$(_c, \"IsAuthenticated\");","map":{"version":3,"names":["React","gql","useQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","IS_LOGGED_IN","IsAuthenticated","children","_s","loading","error","data","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/twitter-clone/twitter-clone-frontend/src/components/IsAuthenticated.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { Navigate  } from \"react-router-dom\";\r\n\r\nconst IS_LOGGED_IN = gql`\r\n{\r\n    me {\r\n        id\r\n    }\r\n}\r\n`;\r\n\r\ninterface Properties {\r\n    children?: React.ReactNode // if this prop exists\r\n}\r\n\r\nexport default function IsAuthenticated({children} : Properties){ // the whole object is of type \"Properties\" but only \"children\" properties will be extracted\r\n    const {loading, error, data} = useQuery(IS_LOGGED_IN); // loading state, error state and data returned by the query\r\n    if(loading) return <p>Loading...</p>;\r\n    if(error) return <p>{error.message}</p>;\r\n    /*if(!data.me){ // in case of no data\r\n        return <Navigate to=\"/home\" />;\r\n    }*/\r\n    return <>{children}</>;\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG/C,MAAMC,YAAY,GAAGN,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC;AAMD,eAAe,SAASO,eAAeA,CAAC;EAACC;AAAqB,CAAC,EAAC;EAAAC,EAAA;EAAE;EAC9D,MAAM;IAACC,OAAO;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGX,QAAQ,CAACK,YAAY,CAAC,CAAC,CAAC;EACvD,IAAGI,OAAO,EAAE,oBAAOP,OAAA;IAAAK,QAAA,EAAG;EAAU;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACpC,IAAGL,KAAK,EAAE,oBAAOR,OAAA;IAAAK,QAAA,EAAIG,KAAK,CAACM;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EACvC;AACJ;AACA;EACI,oBAAOb,OAAA,CAAAE,SAAA;IAAAG,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AAC1B;AAACC,EAAA,CARuBF,eAAe;EAAA,QACJN,QAAQ;AAAA;AAAAiB,EAAA,GADnBX,eAAe;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}