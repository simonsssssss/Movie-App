{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\movie-app\\\\frontend\\\\src\\\\sites\\\\Movies.tsx\",\n  _s = $RefreshSig$();\nimport '../styles/Movies.css';\nimport Modal from 'react-modal';\nimport { gql, useQuery, useMutation, useLazyQuery } from '@apollo/client';\nimport { useEffect, useRef } from 'react';\nimport useState from 'react-usestateref';\nimport { modalStyles } from '../styles/ModalStyles';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { GET_USER_DATA_QUERY } from './Signup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n  var _moviesImages$key, _allMovies$getAllMovi, _allMovies$getAllMovi2, _allMovies$getAllMovi3, _allMovies$getAllMovi4, _allMovies$getAllMovi5, _allMovies$getAllMovi6, _allMovies$getAllMovi7;\n  const RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY = gql`\n    query RetrieveCurrentAccountDataQuery {\n        me {\n          email\n          name\n        }\n    }\n    `;\n  const UPDATE_USER_MUTATION = gql`\n    mutation updateUser($email: String, $name: String) {\n      updateUser(email: $email, name: $name) {\n        id\n      }\n    }\n    `;\n  const UPDATE_USER_PASSWORD_MUTATION = gql`\n    mutation updateUserPassword($password: String!) {\n      updateUserPassword(password: $password) {\n        id\n      }\n    }\n    `;\n  const RETRIEVE_ALL_MOVIES_QUERY = gql`\n    query RetrieveAllMovies {\n      getAllMovies {\n        id\n        title\n        description\n        releaseYear\n        directors\n        topCast\n        countries\n        trailerEmbedUrl\n      }\n    }\n    `;\n  const DELETE_USER_MUTATION = gql`\n    mutation DeleteUser {\n      deleteUser {\n        id\n      }\n    }\n    `;\n  const FIND_MOVIES_QUERY = gql`\n    query FindMovies($searchString: String) {\n      findMovies(searchString: $searchString) {\n        id\n        title\n        description\n        releaseYear\n        directors\n        topCast\n        countries\n        trailerEmbedUrl\n      }\n    }\n    `;\n  const [moviesImages, setMoviesImages, moviesImagesRef] = useState('');\n  const [areSubmittedDetailsSame, setAreSubmittedDetailsSame, areSubmittedDetailsSameRef] = useState(false);\n  const formikReference = useRef(null);\n  const [mutateUpdateUser] = useMutation(UPDATE_USER_MUTATION, {\n    refetchQueries: [{\n      query: RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY\n    }, {\n      query: GET_USER_DATA_QUERY\n    }] // updates the client's cache with fresh data\n  });\n  const [mutateUpdateUserPassword] = useMutation(UPDATE_USER_PASSWORD_MUTATION);\n  const {\n    data\n  } = useQuery(RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY);\n  const {\n    data: allUsersData\n  } = useQuery(GET_USER_DATA_QUERY);\n  const {\n    data: allMovies\n  } = useQuery(RETRIEVE_ALL_MOVIES_QUERY);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [movieModalOpen, setMovieModalOpen] = useState(false);\n  const [mutateDeleteUser] = useMutation(DELETE_USER_MUTATION);\n  const [key, setKey, keyRef] = useState(null);\n  useEffect(() => {\n    async function downloadMoviesImages() {\n      try {\n        const moviesImagesResponse = await fetch('http://localhost:4001/downloadMoviesImages', {\n          method: 'POST'\n        });\n        const moviesImagesResponseData = await moviesImagesResponse.json();\n        setMoviesImages(moviesImagesResponseData);\n      } catch (e) {\n        console.log('Error downloading movies images', e);\n      }\n    }\n    downloadMoviesImages();\n  }, []);\n  let accountFormInitialValues = {\n    email: '',\n    name: ''\n  };\n  if (data && data.me) {\n    accountFormInitialValues = {\n      email: data.me.email,\n      name: data.me.name\n    };\n  }\n  const newPasswordFormInitialValues = {\n    password: '',\n    confirmPassword: ''\n  };\n  const accountFormValidationSchema = yup.object({\n    email: yup.string().email(\"Invalid email address\").required(\"Email required\") // defines a string schema\n    .test('check-if-email-already-exists', 'Email already exists', function (value) {\n      let emailAlreadyExists = false;\n      if (allUsersData && allUsersData.users && data && data.me) {\n        allUsersData.users.forEach(function (user) {\n          if (user.email === value && data.me.email !== value) {\n            emailAlreadyExists = true;\n          }\n        });\n      }\n      if (emailAlreadyExists) {\n        return false; // returns a message \"Email already exists\"\n      }\n      return true;\n    }),\n    name: yup.string().max(15, \"15 characters or less\").required(\"Name required\")\n  });\n  const newPasswordFormValidationSchema = yup.object({\n    password: yup.string().max(20, '20 characters or less').required(\"Password required\"),\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\")], \"Passwords must match\").required(\"Confirm password\") // if password field has null value\n  });\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  const closeModal = () => {\n    removeSubmittedDetailsAreTheSameErrorMessage();\n    setIsOpen(false);\n  };\n  const openMovieModal = () => {\n    setMovieModalOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const closeMovieModal = () => {\n    document.body.style.overflow = 'auto';\n    setMovieModalOpen(false);\n  };\n  const deleteAccount = async () => {\n    if (window.confirm('Your account will be deleted. Continue?')) {\n      await mutateDeleteUser();\n      localStorage.removeItem(\"Movie App Authentication Token\");\n      window.location.reload();\n    }\n  };\n  function logOut() {\n    localStorage.removeItem(\"Movie App Authentication Token\");\n    window.location.reload();\n  }\n  function checkIfSubmittedDetailsAreSame() {\n    if (data && data.me && formikReference.current.values && formikReference.current.values.email && formikReference.current.values.name) {\n      if (data.me.email === formikReference.current.values.email && data.me.name === formikReference.current.values.name) {\n        setAreSubmittedDetailsSame(true);\n      }\n    }\n  }\n  function removeSubmittedDetailsAreTheSameErrorMessage() {\n    setAreSubmittedDetailsSame(false);\n  }\n  const [findMoviesQueryFunction, {\n    data: foundMoviesData\n  }] = useLazyQuery(FIND_MOVIES_QUERY);\n  const findMoviesAcceptableKeys = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', ',', '.',, '/', '?', '!', '%', 'Enter'];\n  async function findMovies(e) {\n    if (findMoviesAcceptableKeys.includes(e.key)) {\n      try {\n        const result = await findMoviesQueryFunction({\n          variables: {\n            searchString: e.target.value\n          }\n        });\n        console.log(result);\n      } catch (e) {\n        console.log('Error finding movies');\n      }\n      if (foundMoviesData && foundMoviesData.findMovies) {}\n    }\n  }\n  function findMoviesSubmit(e) {\n    e.preventDefault(); // prevent the submit event which means that a page will not reload\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"movies-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/movies\",\n          className: \"movies-a\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            id: \"movies-logo-icon\",\n            className: \"fa-solid fa-film\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"movies-search-field\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"movies-form-search\",\n          onSubmit: findMoviesSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"movies-input-search\",\n            type: \"text\",\n            onKeyUp: findMovies,\n            placeholder: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"movies-user-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"movies-user-icon-i\",\n          className: \"fa-solid fa-circle-user\",\n          \"aria-hidden\": \"true\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-user-icon-dropdown-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movies-user-icon-dropdown-content-item\",\n              onClick: openModal,\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              closeTimeoutMS: 60,\n              isOpen: modalIsOpen,\n              onRequestClose: closeModal,\n              style: modalStyles,\n              ariaHideApp: false,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"movies-account-modal-h1\",\n                children: \"Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: accountFormInitialValues,\n                validationSchema: accountFormValidationSchema,\n                innerRef: formikReference,\n                onSubmit: async (values, {\n                  setSubmitting\n                }) => {\n                  setSubmitting(true);\n                  checkIfSubmittedDetailsAreSame();\n                  if (!areSubmittedDetailsSameRef.current) {\n                    await mutateUpdateUser({\n                      variables: values\n                    });\n                    closeModal();\n                  }\n                  setSubmitting(false);\n                },\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  className: \"movies-form-account\",\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: \"email\",\n                    className: \"movies-input-account\",\n                    type: \"text\",\n                    onKeyDown: removeSubmittedDetailsAreTheSameErrorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"email\",\n                    className: \"movies-input-account-error-message\",\n                    component: 'div'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"name\",\n                    className: \"movies-input-account\",\n                    type: \"text\",\n                    onKeyDown: removeSubmittedDetailsAreTheSameErrorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"name\",\n                    className: \"movies-input-account-error-message\",\n                    component: 'div'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 21\n                  }, this), areSubmittedDetailsSame ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"movies-input-account-error-message\",\n                    children: \"Submitted details are the same as current details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"movies-button-account\",\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: newPasswordFormInitialValues,\n                validationSchema: newPasswordFormValidationSchema,\n                onSubmit: async (values, {\n                  setSubmitting\n                }) => {\n                  setSubmitting(true);\n                  await mutateUpdateUserPassword({\n                    variables: values\n                  });\n                  closeModal();\n                  setSubmitting(false);\n                },\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  className: \"movies-form-account\",\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: \"password\",\n                    className: \"movies-input-account\",\n                    type: \"password\",\n                    placeholder: \"New password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"password\",\n                    className: \"movies-input-account-error-message\",\n                    component: 'div'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"confirmPassword\",\n                    className: \"movies-input-account\",\n                    type: \"password\",\n                    placeholder: \"Confirm password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"confirmPassword\",\n                    className: \"movies-input-account-error-message\",\n                    component: 'div'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"movies-button-account\",\n                    children: \"Update password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"movies-account-delete-button\",\n                onClick: deleteAccount,\n                children: \"Delete account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movies-user-icon-dropdown-content-item\",\n              onClick: logOut,\n              children: \"Log out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"movies-movies-list-h1\",\n      children: \"All Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-movies-list\",\n      children: [allMovies && allMovies.getAllMovies && moviesImages ? allMovies.getAllMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-movies-list-item\",\n        onClick: function () {\n          setKey(index);\n          openMovieModal();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"movies-movies-list-item-img\",\n          src: moviesImages[index][1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 19\n        }, this), \" \", movie.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 19\n        }, this), \" \", movie.releaseYear, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Director(s):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 19\n        }, this), \" \", movie.directors.map((director, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"movies-movies-list-item-span\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 80\n          }, this), director + ' ']\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)) : null, /*#__PURE__*/_jsxDEV(Modal, {\n        closeTimeoutMS: 60,\n        isOpen: movieModalOpen,\n        onRequestClose: closeMovieModal,\n        style: modalStyles,\n        ariaHideApp: false,\n        children: allMovies && allMovies.getAllMovies ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-movies-list-item-modal-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"movies-movies-list-item-modal-image-img\",\n              src: (_moviesImages$key = moviesImages[key]) === null || _moviesImages$key === void 0 ? void 0 : _moviesImages$key[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-movies-list-item-modal-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 72\n            }, this), \" \", (_allMovies$getAllMovi = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi === void 0 ? void 0 : _allMovies$getAllMovi.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 19\n          }, this), \" \", (_allMovies$getAllMovi2 = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi2 === void 0 ? void 0 : _allMovies$getAllMovi2.releaseYear, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Director(s):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 19\n          }, this), \" \", (_allMovies$getAllMovi3 = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi3 === void 0 ? void 0 : _allMovies$getAllMovi3.directors.map((director, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movies-movies-list-item-modal-span\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 86\n            }, this), director + ' ']\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Top Cast:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 19\n          }, this), \" \", (_allMovies$getAllMovi4 = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi4 === void 0 ? void 0 : _allMovies$getAllMovi4.topCast.map((castMember, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movies-movies-list-item-modal-span\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 86\n            }, this), castMember + ' ']\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Country(ies):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 19\n          }, this), \" \", (_allMovies$getAllMovi5 = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi5 === void 0 ? void 0 : _allMovies$getAllMovi5.countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movies-movies-list-item-modal-span\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 86\n            }, this), country + ' ']\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 19\n          }, this), (_allMovies$getAllMovi6 = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi6 === void 0 ? void 0 : _allMovies$getAllMovi6.description, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-movies-list-item-modal-trailer\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"movies-movies-list-item-modal-trailer-h1\",\n              children: \"Trailer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n              className: \"movies-movies-list-item-modal-trailer-iframe\",\n              width: \"500\",\n              height: \"350\",\n              src: (_allMovies$getAllMovi7 = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi7 === void 0 ? void 0 : _allMovies$getAllMovi7.trailerEmbedUrl,\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(Movies, \"4A3b6Vo4BS5qV2GZWQlOmQIacnU=\", false, function () {\n  return [useMutation, useMutation, useQuery, useQuery, useQuery, useMutation, useLazyQuery];\n});\n_c = Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["Modal","gql","useQuery","useMutation","useLazyQuery","useEffect","useRef","useState","modalStyles","Formik","Form","Field","ErrorMessage","yup","GET_USER_DATA_QUERY","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","_s","_moviesImages$key","_allMovies$getAllMovi","_allMovies$getAllMovi2","_allMovies$getAllMovi3","_allMovies$getAllMovi4","_allMovies$getAllMovi5","_allMovies$getAllMovi6","_allMovies$getAllMovi7","RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY","UPDATE_USER_MUTATION","UPDATE_USER_PASSWORD_MUTATION","RETRIEVE_ALL_MOVIES_QUERY","DELETE_USER_MUTATION","FIND_MOVIES_QUERY","moviesImages","setMoviesImages","moviesImagesRef","areSubmittedDetailsSame","setAreSubmittedDetailsSame","areSubmittedDetailsSameRef","formikReference","mutateUpdateUser","refetchQueries","query","mutateUpdateUserPassword","data","allUsersData","allMovies","modalIsOpen","setIsOpen","movieModalOpen","setMovieModalOpen","mutateDeleteUser","key","setKey","keyRef","downloadMoviesImages","moviesImagesResponse","fetch","method","moviesImagesResponseData","json","e","console","log","accountFormInitialValues","email","name","me","newPasswordFormInitialValues","password","confirmPassword","accountFormValidationSchema","object","string","required","test","value","emailAlreadyExists","users","forEach","user","max","newPasswordFormValidationSchema","oneOf","ref","openModal","closeModal","removeSubmittedDetailsAreTheSameErrorMessage","openMovieModal","document","body","style","overflow","closeMovieModal","deleteAccount","window","confirm","localStorage","removeItem","location","reload","logOut","checkIfSubmittedDetailsAreSame","current","values","findMoviesQueryFunction","foundMoviesData","findMoviesAcceptableKeys","findMovies","includes","result","variables","searchString","target","findMoviesSubmit","preventDefault","className","children","href","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onKeyUp","placeholder","onClick","closeTimeoutMS","isOpen","onRequestClose","ariaHideApp","initialValues","validationSchema","innerRef","setSubmitting","onKeyDown","component","getAllMovies","map","movie","index","src","title","releaseYear","directors","director","topCast","castMember","countries","country","description","width","height","trailerEmbedUrl","allow","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/movie-app/frontend/src/sites/Movies.tsx"],"sourcesContent":["import '../styles/Movies.css';\r\nimport Modal from 'react-modal';\r\nimport { gql, useQuery, useMutation, useLazyQuery } from '@apollo/client';\r\nimport { useEffect, useRef } from 'react';\r\nimport useState from 'react-usestateref';\r\nimport { modalStyles } from '../styles/ModalStyles';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { GET_USER_DATA_QUERY} from './Signup';\r\n\r\nexport default function Movies() {\r\n  const RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY = gql`\r\n    query RetrieveCurrentAccountDataQuery {\r\n        me {\r\n          email\r\n          name\r\n        }\r\n    }\r\n    `\r\n    ;\r\n  const UPDATE_USER_MUTATION = gql`\r\n    mutation updateUser($email: String, $name: String) {\r\n      updateUser(email: $email, name: $name) {\r\n        id\r\n      }\r\n    }\r\n    `\r\n    ;\r\n  const UPDATE_USER_PASSWORD_MUTATION = gql`\r\n    mutation updateUserPassword($password: String!) {\r\n      updateUserPassword(password: $password) {\r\n        id\r\n      }\r\n    }\r\n    `\r\n    ;\r\n  const RETRIEVE_ALL_MOVIES_QUERY = gql`\r\n    query RetrieveAllMovies {\r\n      getAllMovies {\r\n        id\r\n        title\r\n        description\r\n        releaseYear\r\n        directors\r\n        topCast\r\n        countries\r\n        trailerEmbedUrl\r\n      }\r\n    }\r\n    `;\r\n  const DELETE_USER_MUTATION = gql`\r\n    mutation DeleteUser {\r\n      deleteUser {\r\n        id\r\n      }\r\n    }\r\n    `;\r\n  const FIND_MOVIES_QUERY = gql`\r\n    query FindMovies($searchString: String) {\r\n      findMovies(searchString: $searchString) {\r\n        id\r\n        title\r\n        description\r\n        releaseYear\r\n        directors\r\n        topCast\r\n        countries\r\n        trailerEmbedUrl\r\n      }\r\n    }\r\n    `;\r\n  const [moviesImages, setMoviesImages, moviesImagesRef] = useState('');\r\n  const [areSubmittedDetailsSame, setAreSubmittedDetailsSame, areSubmittedDetailsSameRef] = useState(false);\r\n  const formikReference = useRef(null);\r\n  const [mutateUpdateUser] = useMutation(UPDATE_USER_MUTATION, {\r\n    refetchQueries: [{query: RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY}, {query: GET_USER_DATA_QUERY}] // updates the client's cache with fresh data\r\n  });\r\n  const [mutateUpdateUserPassword] = useMutation(UPDATE_USER_PASSWORD_MUTATION);\r\n  const {data} = useQuery(RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY);\r\n  const {data: allUsersData} = useQuery(GET_USER_DATA_QUERY);\r\n  const {data: allMovies} = useQuery(RETRIEVE_ALL_MOVIES_QUERY);\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [movieModalOpen,setMovieModalOpen] = useState(false);\r\n  const [mutateDeleteUser] = useMutation(DELETE_USER_MUTATION);\r\n  const [key, setKey, keyRef] = useState(null);\r\n  useEffect(() => {\r\n    async function downloadMoviesImages() {\r\n      try {\r\n        const moviesImagesResponse = await fetch('http://localhost:4001/downloadMoviesImages', {\r\n          method: 'POST'\r\n        });\r\n        const moviesImagesResponseData = await moviesImagesResponse.json();\r\n        setMoviesImages(moviesImagesResponseData);\r\n      }\r\n      catch(e) {\r\n        console.log('Error downloading movies images',e);\r\n      }\r\n    }\r\n    downloadMoviesImages();\r\n  },[]);\r\n  let accountFormInitialValues = {\r\n    email: '',\r\n    name: ''\r\n  };\r\n  if(data && data.me) {\r\n    accountFormInitialValues = {\r\n      email: data.me.email,\r\n      name: data.me.name\r\n    };\r\n  }\r\n  const newPasswordFormInitialValues = {\r\n    password: '',\r\n    confirmPassword: ''\r\n  };\r\n  const accountFormValidationSchema = yup.object({\r\n    email: yup.string().email(\"Invalid email address\").required(\"Email required\") // defines a string schema\r\n            .test('check-if-email-already-exists', 'Email already exists',\r\n              function(value) {\r\n                let emailAlreadyExists = false;\r\n                if(allUsersData && allUsersData.users && data && data.me) {\r\n                  allUsersData.users.forEach(function(user: any) {\r\n                      if(user.email === value && data.me.email !== value) {\r\n                          emailAlreadyExists = true;\r\n                      }\r\n                  });\r\n                }\r\n                if(emailAlreadyExists) {\r\n                  return false; // returns a message \"Email already exists\"\r\n                }\r\n                return true;\r\n              }),\r\n    name: yup.string().max(15,\"15 characters or less\").required(\"Name required\")\r\n  });\r\n  const newPasswordFormValidationSchema = yup.object({\r\n    password: yup.string().max(20, '20 characters or less').required(\"Password required\"),\r\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\")],\"Passwords must match\").required(\"Confirm password\") // if password field has null value\r\n  });\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    removeSubmittedDetailsAreTheSameErrorMessage();\r\n    setIsOpen(false);\r\n  };\r\n  const openMovieModal = () => {\r\n    setMovieModalOpen(true);\r\n    document.body.style.overflow = 'hidden';\r\n  };\r\n  const closeMovieModal = () => {\r\n    document.body.style.overflow = 'auto';\r\n    setMovieModalOpen(false);\r\n  };\r\n  const deleteAccount = async () => {\r\n    if(window.confirm('Your account will be deleted. Continue?')) {\r\n      await mutateDeleteUser();\r\n      localStorage.removeItem(\"Movie App Authentication Token\");\r\n      window.location.reload();\r\n    }\r\n  };\r\n  function logOut() {\r\n    localStorage.removeItem(\"Movie App Authentication Token\");\r\n    window.location.reload();\r\n  }\r\n  function checkIfSubmittedDetailsAreSame() {\r\n    if(data && data.me && formikReference.current.values && formikReference.current.values.email && formikReference.current.values.name) {\r\n      if(data.me.email === formikReference.current.values.email && data.me.name === formikReference.current.values.name) {\r\n        setAreSubmittedDetailsSame(true);\r\n      }\r\n    }\r\n  }\r\n  function removeSubmittedDetailsAreTheSameErrorMessage() {\r\n    setAreSubmittedDetailsSame(false);\r\n  }\r\n  const [ findMoviesQueryFunction, {data: foundMoviesData}] = useLazyQuery(FIND_MOVIES_QUERY);\r\n  const findMoviesAcceptableKeys = [\r\n    'A','B','C','D','E','F','G','H','I','J','K',\r\n    'L','M','N','O','P','Q','R','S','T','U','V',\r\n    'W','X','Y','Z','a','b','c','d','e','f','g',\r\n    'h','i','j','k','l','m','n','o','p','q','r',\r\n    's','t','u','v','w','x','y','z','0','1','2',\r\n    '3','4','5','6','7','8','9',':',';',',','.',\r\n    ,'/','?','!','%','Enter'];\r\n  async function findMovies(e: any) {\r\n    if(findMoviesAcceptableKeys.includes(e.key)) {\r\n      try {\r\n        const result = await findMoviesQueryFunction({variables: {searchString: e.target.value}});\r\n        console.log(result);\r\n      }\r\n      catch(e) {\r\n        console.log('Error finding movies');\r\n      }\r\n      if(foundMoviesData && foundMoviesData.findMovies) {\r\n\r\n      }\r\n    }\r\n  }\r\n  function findMoviesSubmit(e: any) {\r\n    e.preventDefault(); // prevent the submit event which means that a page will not reload\r\n  }\r\n  return (\r\n    <div className=\"movies-container\">\r\n      <div className=\"movies-navbar\">\r\n        <span className=\"movies-logo\">\r\n          <a href='/movies' className=\"movies-a\">\r\n            <i id=\"movies-logo-icon\" className=\"fa-solid fa-film\" aria-hidden=\"true\"></i>\r\n          </a>\r\n        </span>\r\n        <span className=\"movies-search-field\">\r\n          <form className='movies-form-search' onSubmit={findMoviesSubmit} >\r\n            <input className='movies-input-search' type=\"text\" onKeyUp={findMovies} placeholder=\"Search...\"></input>\r\n          </form>\r\n        </span>\r\n        <span className=\"movies-user-icon\">\r\n          <i id=\"movies-user-icon-i\" className=\"fa-solid fa-circle-user\" aria-hidden=\"true\">\r\n            <div className='movies-user-icon-dropdown-content'>\r\n              <div className='movies-user-icon-dropdown-content-item' onClick={openModal}>Account</div>\r\n              <Modal closeTimeoutMS={60} isOpen={modalIsOpen} onRequestClose={closeModal} style={modalStyles} ariaHideApp={false}>\r\n                <h1 className='movies-account-modal-h1'>Account</h1>\r\n                <Formik initialValues={accountFormInitialValues} validationSchema={accountFormValidationSchema} innerRef={formikReference} onSubmit={async (values,{setSubmitting}) => {\r\n                    setSubmitting(true);\r\n                    checkIfSubmittedDetailsAreSame();\r\n                    if(!areSubmittedDetailsSameRef.current) {\r\n                      await mutateUpdateUser({variables: values});\r\n                      closeModal();\r\n                    }\r\n                    setSubmitting(false);\r\n                }}>\r\n                  <Form className='movies-form-account'>\r\n                    <Field name='email' className='movies-input-account' type=\"text\" onKeyDown={removeSubmittedDetailsAreTheSameErrorMessage}></Field>\r\n                    <ErrorMessage name='email' className='movies-input-account-error-message' component={'div'} />\r\n                    <Field name='name' className='movies-input-account' type=\"text\" onKeyDown={removeSubmittedDetailsAreTheSameErrorMessage}></Field>\r\n                    <ErrorMessage name='name' className='movies-input-account-error-message' component={'div'} />\r\n                    {areSubmittedDetailsSame ? (\r\n                      <div className='movies-input-account-error-message'>Submitted details are the same as current details</div>\r\n                    ) : null}\r\n                    <button type=\"submit\" className='movies-button-account'>Update</button>\r\n                  </Form>\r\n                </Formik>\r\n                <br />\r\n                <Formik initialValues={newPasswordFormInitialValues} validationSchema={newPasswordFormValidationSchema} onSubmit={async (values,{setSubmitting}) => {\r\n                    setSubmitting(true);\r\n                    await mutateUpdateUserPassword({variables: values});\r\n                    closeModal();\r\n                    setSubmitting(false);\r\n                }}>\r\n                  <Form className='movies-form-account'>\r\n                    <Field name='password' className='movies-input-account' type=\"password\" placeholder='New password'></Field>\r\n                    <ErrorMessage name='password' className='movies-input-account-error-message' component={'div'} />\r\n                    <Field name='confirmPassword' className='movies-input-account' type=\"password\" placeholder='Confirm password'></Field>\r\n                    <ErrorMessage name='confirmPassword' className='movies-input-account-error-message' component={'div'} />\r\n                    <button type=\"submit\" className='movies-button-account'>Update password</button>\r\n                  </Form>\r\n                </Formik>\r\n                <button type='button' className='movies-account-delete-button' onClick={deleteAccount}>Delete account</button>\r\n              </Modal>\r\n              <div className='movies-user-icon-dropdown-content-item' onClick={logOut}>Log out</div>\r\n            </div>\r\n          </i>\r\n        </span>\r\n      </div>\r\n      <h1 className='movies-movies-list-h1'>All Movies</h1>\r\n      <div className='movies-movies-list'>\r\n          {\r\n            allMovies && allMovies.getAllMovies && moviesImages ? (\r\n              allMovies.getAllMovies.map((movie:any,index:any) => (\r\n                <div className='movies-movies-list-item' key={index} onClick={ function() {\r\n                  setKey(index);\r\n                  openMovieModal();\r\n                }}>\r\n                  <img className='movies-movies-list-item-img' src={moviesImages[index][1]}></img>\r\n                  <br />\r\n                  <b>Title:</b> {movie.title}\r\n                  <br />\r\n                  <b>Year:</b> {movie.releaseYear}\r\n                  <br />\r\n                  <b>Director(s):</b> {movie.directors.map((director:any,index:any) => (\r\n                    <span className='movies-movies-list-item-span' key={index}><br />{director + ' '}</span>\r\n                  ))}\r\n                </div>\r\n              ))\r\n            ) : null\r\n          }\r\n          <Modal closeTimeoutMS={60} isOpen={movieModalOpen} onRequestClose={closeMovieModal} style={modalStyles} ariaHideApp={false}>\r\n            {\r\n              allMovies && allMovies.getAllMovies ? (\r\n                <>\r\n                  <div className='movies-movies-list-item-modal-image'>\r\n                    <img className='movies-movies-list-item-modal-image-img' src={moviesImages[key]?.[1]}></img>\r\n                  </div>\r\n                  <div className='movies-movies-list-item-modal-title'><b>Title:</b> {allMovies.getAllMovies[key]?.title}</div>\r\n                  <b>Year:</b> {allMovies.getAllMovies[key]?.releaseYear}\r\n                  <br />\r\n                  <b>Director(s):</b> {allMovies.getAllMovies[key]?.directors.map((director:any,index:any) => (\r\n                    <span className='movies-movies-list-item-modal-span' key={index}><br />{director + ' '}</span>\r\n                  ))}\r\n                  <br />\r\n                  <b>Top Cast:</b> {allMovies.getAllMovies[key]?.topCast.map((castMember:any,index:any) => (\r\n                    <span className='movies-movies-list-item-modal-span' key={index}><br />{castMember + ' '}</span>\r\n                  ))}\r\n                  <br />\r\n                  <b>Country(ies):</b> {allMovies.getAllMovies[key]?.countries.map((country:any,index:any) => (\r\n                    <span className='movies-movies-list-item-modal-span' key={index}><br />{country + ' '}</span>\r\n                  ))}\r\n                  <br />\r\n                  <b>Description:</b>\r\n                  <br />\r\n                  {allMovies.getAllMovies[key]?.description}\r\n                  <div className='movies-movies-list-item-modal-trailer'>\r\n                    <h1 className='movies-movies-list-item-modal-trailer-h1'>Trailer</h1>\r\n                    <iframe\r\n                      className='movies-movies-list-item-modal-trailer-iframe'\r\n                      width=\"500\"\r\n                      height=\"350\"\r\n                      src={allMovies.getAllMovies[key]?.trailerEmbedUrl}\r\n                      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\">\r\n                    </iframe>\r\n                  </div>\r\n                </>\r\n              ) : null\r\n            }\r\n          </Modal>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}