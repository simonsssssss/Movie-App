{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\twitter-clone\\\\frontend\\\\src\\\\sites\\\\Login.tsx\",\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { gql, useMutation } from '@apollo/client';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport TwitterLogo from '../styles/assets/TwitterLogo.png';\nimport '../styles/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOGIN_MUTATION = gql`\nmutation login($email: String!, $password: String!){\n    login(email: $email, password: $password){\n        token\n    }\n}\n`;\nfunction Login() {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  const [mutateLogin] = useMutation(LOGIN_MUTATION); // returns a tuple consisting of a mutate function that you can call at any time to execute the mutation and an object with fields that represent the current status of the mutation's execution (data, loading, etc.)\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = yup.object({\n    email: yup.string().email(\"Invalid email address\").required(\"Email required\"),\n    // defines a string schema\n    password: yup.string().max(20, '20 characters or less').required(\"Password required\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: TwitterLogo,\n      alt: \"Twitter logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Log in to Twitter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: _s(async (values, {\n        setSubmitting\n      }) => {\n        _s();\n        setSubmitting(true);\n        const response = await mutateLogin({\n          variables: values\n        });\n        localStorage.setItem(\"token\", response.data.login.token);\n        setSubmitting(false);\n        const location = useLocation();\n        navigate('/users', {\n          state: {\n            location\n          },\n          replace: true\n        });\n      }, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n        return [useLocation];\n      }),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"text\",\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: 'div'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: 'div'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 72\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"question\",\n        children: \"Don't have an account? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s2(Login, \"0mnUPrgJug8dNfIYD5Md3IOXYZI=\", false, function () {\n  return [useNavigate, useMutation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","gql","useMutation","ErrorMessage","Field","Form","Formik","yup","Link","useNavigate","useLocation","TwitterLogo","jsxDEV","_jsxDEV","LOGIN_MUTATION","Login","_s2","_s","$RefreshSig$","navigate","mutateLogin","initialValues","email","password","validationSchema","object","string","required","max","children","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","values","setSubmitting","response","variables","localStorage","setItem","data","login","token","location","state","replace","name","type","placeholder","component","to","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/twitter-clone/frontend/src/sites/Login.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik'; \r\nimport * as yup from 'yup';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { Sign } from \"crypto\";\r\nimport TwitterLogo from '../styles/assets/TwitterLogo.png';\r\nimport '../styles/login.css';\r\n\r\nconst LOGIN_MUTATION = gql`\r\nmutation login($email: String!, $password: String!){\r\n    login(email: $email, password: $password){\r\n        token\r\n    }\r\n}\r\n`;\r\n\r\ninterface LoginValues{\r\n    email: string,\r\n    password: string\r\n}\r\n\r\nfunction Login(){\r\n    const navigate = useNavigate();\r\n    const [mutateLogin] = useMutation(LOGIN_MUTATION); // returns a tuple consisting of a mutate function that you can call at any time to execute the mutation and an object with fields that represent the current status of the mutation's execution (data, loading, etc.)\r\n    const initialValues: LoginValues = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    const validationSchema = yup.object({\r\n        email: yup.string().email(\"Invalid email address\").required(\"Email required\"), // defines a string schema\r\n        password: yup.string().max(20, '20 characters or less').required(\"Password required\"),\r\n    })\r\n    return(\r\n        <div>\r\n            <img src={TwitterLogo} alt='Twitter logo' className=\"logo\"></img>\r\n            <h3>Log in to Twitter</h3>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={async (values,{setSubmitting}) => {\r\n                    setSubmitting(true);\r\n                    const response = await mutateLogin({ variables: values});\r\n                    localStorage.setItem(\"token\", response.data.login.token);\r\n                    setSubmitting(false);\r\n                    const location = useLocation();\r\n                    navigate('/users',{state: {location},replace: true});\r\n                }}>\r\n                    <Form>\r\n                        <Field name=\"email\" type=\"text\" placeholder=\"email\" />\r\n                        <ErrorMessage name=\"email\" component={'div'} />\r\n                        <Field name=\"password\" type=\"password\" placeholder=\"password\" />\r\n                        <ErrorMessage name=\"password\" component={'div'} /> {/* component for rendering a message */}\r\n                        <button type=\"submit\" className=\"login-button\"><span>Log in</span></button>\r\n                    </Form>\r\n            </Formik>\r\n            <div className=\"register\" >\r\n                <br />\r\n                <span className=\"question\">Don't have an account? </span>\r\n                <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}