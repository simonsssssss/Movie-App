{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\twitter-clone\\\\frontend\\\\src\\\\sites\\\\Signup.tsx\",\n  _s = $RefreshSig$();\nimport { gql, useMutation } from '@apollo/client';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Link, useNavigate } from 'react-router-dom';\nimport TwitterLogo from '../assets/TwitterLogo.png';\nimport '../styles/LoginSignup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNUP_MUTATION = gql`\nmutation signup($name: String, $email: String!, $password: String!){\n    signup(name: $name, email: $email, password: $password){\n        token\n    }\n}\n`;\nconst ADD_SIGNUP_DATE_TO_DATABASE_MUTATION = gql`\n\n`;\nfunction Signup() {\n  _s();\n  const navigate = useNavigate();\n  const [mutateSignup] = useMutation(SIGNUP_MUTATION); // returns a tuple consisting of a mutate function that you can call at any time to execute the mutation and an object with fields that represent the current status of the mutation's execution (data, loading, etc.)\n  const initialValues = {\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: ''\n  };\n  const validationSchema = yup.object({\n    email: yup.string().email(\"Invalid email address\").required(\"email required\"),\n    // defines a string schema\n    password: yup.string().max(20, '20 characters or less').required(\"password required\"),\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\")], \"passwords must match\"),\n    // if password field has null value\n    name: yup.string().max(15, \"15 characters or less\").required(\"name required\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginsignup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: TwitterLogo,\n      alt: \"Twitter logo\",\n      className: \"loginsignup-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"loginsignup-h3\",\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: async (values, {\n        setSubmitting\n      }) => {\n        setSubmitting(true);\n        localStorage.setItem(\"token\", response.data.signup.token);\n        setSubmitting(false);\n        navigate('/feed');\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"loginsignup-form\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"text\",\n          placeholder: \"email\",\n          className: \"loginsignup-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: 'div',\n          className: \"loginsignup-errorMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"name\",\n          className: \"loginsignup-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\",\n          component: 'div',\n          className: \"loginsignup-errorMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"password\",\n          className: \"loginsignup-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: 'div',\n          className: \"loginsignup-errorMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"confirmPassword\",\n          type: \"password\",\n          placeholder: \"confirm password\",\n          className: \"loginsignup-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"confirmPassword\",\n          component: 'div',\n          className: \"loginsignup-errorMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"loginsignup-button\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loginsignup-span\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 78\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginsignup-signup\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loginsignup-question\",\n        children: \"Already have an account? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"loginsignup-link\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Signup, \"EdGU9XXvVjGTjl0eFbq4JGg6YDM=\", false, function () {\n  return [useNavigate, useMutation];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["gql","useMutation","ErrorMessage","Field","Form","Formik","yup","Link","useNavigate","TwitterLogo","jsxDEV","_jsxDEV","SIGNUP_MUTATION","ADD_SIGNUP_DATE_TO_DATABASE_MUTATION","Signup","_s","navigate","mutateSignup","initialValues","email","password","confirmPassword","name","validationSchema","object","string","required","max","oneOf","ref","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","values","setSubmitting","localStorage","setItem","response","data","signup","token","type","placeholder","component","to","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/twitter-clone/frontend/src/sites/Signup.tsx"],"sourcesContent":["import { gql, useMutation } from '@apollo/client';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik'; \r\nimport * as yup from 'yup';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport TwitterLogo from '../assets/TwitterLogo.png';\r\nimport '../styles/LoginSignup.css';\r\n\r\nconst SIGNUP_MUTATION = gql`\r\nmutation signup($name: String, $email: String!, $password: String!){\r\n    signup(name: $name, email: $email, password: $password){\r\n        token\r\n    }\r\n}\r\n`;\r\n\r\nconst ADD_SIGNUP_DATE_TO_DATABASE_MUTATION = gql`\r\n\r\n`\r\n;\r\n\r\ninterface SignupValues{\r\n    email: string,\r\n    password: string,\r\n    confirmPassword: string,\r\n    name: string\r\n}\r\n\r\nfunction Signup(){\r\n    const navigate = useNavigate();\r\n    const [mutateSignup] = useMutation(SIGNUP_MUTATION); // returns a tuple consisting of a mutate function that you can call at any time to execute the mutation and an object with fields that represent the current status of the mutation's execution (data, loading, etc.)\r\n    const initialValues: SignupValues = {\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        name: ''\r\n    }\r\n    const validationSchema = yup.object({\r\n        email: yup.string().email(\"Invalid email address\").required(\"email required\"), // defines a string schema\r\n        password: yup.string().max(20, '20 characters or less').required(\"password required\"),\r\n        confirmPassword: yup.string().oneOf([yup.ref(\"password\")],\"passwords must match\"), // if password field has null value\r\n        name: yup.string().max(15,\"15 characters or less\").required(\"name required\")\r\n    })\r\n    return(\r\n        <div className='loginsignup-container'>\r\n            <img src={TwitterLogo} alt='Twitter logo' className=\"loginsignup-logo\"></img>\r\n            <h3 className='loginsignup-h3'>Sign up</h3>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={async (values,{setSubmitting}) => {\r\n                    setSubmitting(true);\r\n                    \r\n                    localStorage.setItem(\"token\", response.data.signup.token);\r\n                    setSubmitting(false);\r\n                    navigate('/feed');\r\n                }}>\r\n                    <Form className='loginsignup-form'>\r\n                        <Field name=\"email\" type=\"text\" placeholder=\"email\" className='loginsignup-field' />\r\n                        <ErrorMessage name=\"email\" component={'div'} className='loginsignup-errorMessage' />\r\n                        <Field name=\"name\" type=\"text\" placeholder=\"name\" className='loginsignup-field' />\r\n                        <ErrorMessage name=\"name\" component={'div'} className='loginsignup-errorMessage' />\r\n                        <Field name=\"password\" type=\"password\" placeholder=\"password\" className='loginsignup-field' />\r\n                        <ErrorMessage name=\"password\" component={'div'} className='loginsignup-errorMessage' />\r\n                        <Field name=\"confirmPassword\" type=\"password\" placeholder=\"confirm password\" className='loginsignup-field' />\r\n                        <ErrorMessage name=\"confirmPassword\" component={'div'} className='loginsignup-errorMessage' />\r\n                        <button type=\"submit\" className=\"loginsignup-button\"><span className='loginsignup-span'>Sign up</span></button>\r\n                    </Form>\r\n            </Formik>\r\n            <div className=\"loginsignup-signup\">\r\n                <br />\r\n                <span className=\"loginsignup-question\">Already have an account? </span>\r\n                <Link to=\"/login\" className=\"loginsignup-link\">Log in</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}