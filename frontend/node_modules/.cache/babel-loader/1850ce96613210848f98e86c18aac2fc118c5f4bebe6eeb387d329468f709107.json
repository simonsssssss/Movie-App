{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\movie-app\\\\frontend\\\\src\\\\sites\\\\Movies.tsx\",\n  _s = $RefreshSig$();\nimport '../styles/Movies.css';\nimport Modal from 'react-modal';\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport { useEffect, useRef } from 'react';\nimport useState from 'react-usestateref';\nimport { modalStyles } from '../styles/ModalStyles';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { GET_USER_DATA_QUERY } from './Signup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n  var _moviesImages$key, _allMovies$getAllMovi, _allMovies$getAllMovi2, _allMovies$getAllMovi3, _allMovies$getAllMovi4, _allMovies$getAllMovi5, _allMovies$getAllMovi6, _allMovies$getAllMovi7;\n  const RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY = gql`\n    query RetrieveCurrentAccountDataQuery {\n        me {\n          email\n          name\n        }\n    }\n    `;\n  const UPDATE_USER_MUTATION = gql`\n    mutation updateUser($email: String, $name: String) {\n      updateUser(email: $email, name: $name) {\n        id\n      }\n    }\n    `;\n  const UPDATE_USER_PASSWORD_MUTATION = gql`\n    mutation updateUserPassword($password: String!) {\n      updateUserPassword(password: $password) {\n        id\n      }\n    }\n    `;\n  const RETRIEVE_ALL_MOVIES_QUERY = gql`\n    query RetrieveAllMovies {\n      getAllMovies {\n        id\n        title\n        description\n        releaseYear\n        directors\n        topCast\n        countries\n        trailerEmbedUrl\n      }\n    }\n    `;\n  const DELETE_USER_MUTATION = gql`\n    mutation DeleteUser {\n      deleteUser {\n        id\n      }\n    }\n    `;\n  const [moviesImages, setMoviesImages, moviesImagesRef] = useState('');\n  useEffect(() => {\n    async function downloadMoviesImages() {\n      try {\n        const moviesImagesResponse = await fetch('http://localhost:4001/downloadMoviesImages', {\n          method: 'POST'\n        });\n        const moviesImagesResponseData = await moviesImagesResponse.json();\n        setMoviesImages(moviesImagesResponseData);\n      } catch (e) {\n        console.log('Error downloading movies images', e);\n      }\n    }\n    downloadMoviesImages();\n  }, []);\n  const [areSubmittedDetailsSame, setAreSubmittedDetailsSame, areSubmittedDetailsSameRef] = useState(false);\n  const formikReference = useRef(null);\n  const [mutateUpdateUser] = useMutation(UPDATE_USER_MUTATION, {\n    refetchQueries: [{\n      query: RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY\n    }, {\n      query: GET_USER_DATA_QUERY\n    }] // updates the client's cache with fresh data\n  });\n  const [mutateUpdateUserPassword] = useMutation(UPDATE_USER_PASSWORD_MUTATION);\n  const {\n    data\n  } = useQuery(RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY);\n  const {\n    data: allUsersData\n  } = useQuery(GET_USER_DATA_QUERY);\n  const {\n    data: allMovies\n  } = useQuery(RETRIEVE_ALL_MOVIES_QUERY);\n  let accountFormInitialValues = {\n    email: '',\n    name: ''\n  };\n  if (data && data.me) {\n    accountFormInitialValues = {\n      email: data.me.email,\n      name: data.me.name\n    };\n  }\n  const newPasswordFormInitialValues = {\n    password: '',\n    confirmPassword: ''\n  };\n  const accountFormValidationSchema = yup.object({\n    email: yup.string().email(\"Invalid email address\").required(\"Email required\") // defines a string schema\n    .test('check-if-email-already-exists', 'Email already exists', function (value) {\n      let emailAlreadyExists = false;\n      if (allUsersData && allUsersData.users && data && data.me) {\n        allUsersData.users.forEach(function (user) {\n          if (user.email === value && data.me.email !== value) {\n            emailAlreadyExists = true;\n          }\n        });\n      }\n      if (emailAlreadyExists) {\n        return false; // returns a message \"Email already exists\"\n      }\n      return true;\n    }),\n    name: yup.string().max(15, \"15 characters or less\").required(\"Name required\")\n  });\n  const newPasswordFormValidationSchema = yup.object({\n    password: yup.string().max(20, '20 characters or less').required(\"Password required\"),\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\")], \"Passwords must match\").required(\"Confirm password\") // if password field has null value\n  });\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  const closeModal = () => {\n    removeSubmittedDetailsAreTheSameErrorMessage();\n    setIsOpen(false);\n  };\n  const [movieModalOpen, setMovieModalOpen] = useState(false);\n  const openMovieModal = () => {\n    setMovieModalOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const closeMovieModal = () => {\n    document.body.style.overflow = 'auto';\n    setMovieModalOpen(false);\n  };\n  const [mutateDeleteUser] = useMutation(DELETE_USER_MUTATION);\n  const deleteAccount = async () => {\n    if (window.confirm('Your account will be deleted. Continue?')) {\n      await mutateDeleteUser();\n      localStorage.removeItem(\"Movie App Authentication Token\");\n      window.location.reload();\n    }\n  };\n  const [key, setKey, keyRef] = useState(null);\n  function logOut() {\n    localStorage.removeItem(\"Movie App Authentication Token\");\n    window.location.reload();\n  }\n  function checkIfSubmittedDetailsAreSame() {\n    if (data && data.me && formikReference.current.values && formikReference.current.values.email && formikReference.current.values.name) {\n      if (data.me.email === formikReference.current.values.email && data.me.name === formikReference.current.values.name) {\n        setAreSubmittedDetailsSame(true);\n      }\n    }\n  }\n  function removeSubmittedDetailsAreTheSameErrorMessage() {\n    setAreSubmittedDetailsSame(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"movies-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/movies\",\n          className: \"movies-a\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            id: \"movies-logo-icon\",\n            className: \"fa-solid fa-film\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"movies-search-field\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"movies-form-search\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"movies-input-search\",\n            type: \"text\",\n            placeholder: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"movies-user-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"movies-user-icon-i\",\n          className: \"fa-solid fa-circle-user\",\n          \"aria-hidden\": \"true\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-user-icon-dropdown-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movies-user-icon-dropdown-content-item\",\n              onClick: openModal,\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              closeTimeoutMS: 60,\n              isOpen: modalIsOpen,\n              onRequestClose: closeModal,\n              style: modalStyles,\n              ariaHideApp: false,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"movies-account-modal-h1\",\n                children: \"Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: accountFormInitialValues,\n                validationSchema: accountFormValidationSchema,\n                innerRef: formikReference,\n                onSubmit: async (values, {\n                  setSubmitting\n                }) => {\n                  setSubmitting(true);\n                  checkIfSubmittedDetailsAreSame();\n                  if (!areSubmittedDetailsSameRef.current) {\n                    await mutateUpdateUser({\n                      variables: values\n                    });\n                    closeModal();\n                  }\n                  setSubmitting(false);\n                },\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  className: \"movies-form-account\",\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: \"email\",\n                    className: \"movies-input-account\",\n                    type: \"text\",\n                    onKeyDown: removeSubmittedDetailsAreTheSameErrorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"email\",\n                    className: \"movies-input-account-error-message\",\n                    component: 'div'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"name\",\n                    className: \"movies-input-account\",\n                    type: \"text\",\n                    onKeyDown: removeSubmittedDetailsAreTheSameErrorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"name\",\n                    className: \"movies-input-account-error-message\",\n                    component: 'div'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 21\n                  }, this), areSubmittedDetailsSame ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"movies-input-account-error-message\",\n                    children: \"Submitted details are the same as current details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"movies-button-account\",\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: newPasswordFormInitialValues,\n                validationSchema: newPasswordFormValidationSchema,\n                onSubmit: async (values, {\n                  setSubmitting\n                }) => {\n                  setSubmitting(true);\n                  await mutateUpdateUserPassword({\n                    variables: values\n                  });\n                  closeModal();\n                  setSubmitting(false);\n                },\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  className: \"movies-form-account\",\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: \"password\",\n                    className: \"movies-input-account\",\n                    type: \"password\",\n                    placeholder: \"New password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"password\",\n                    className: \"movies-input-account-error-message\",\n                    component: 'div'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"confirmPassword\",\n                    className: \"movies-input-account\",\n                    type: \"password\",\n                    placeholder: \"Confirm password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"confirmPassword\",\n                    className: \"movies-input-account-error-message\",\n                    component: 'div'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"movies-button-account\",\n                    children: \"Update password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"movies-account-delete-button\",\n                onClick: deleteAccount,\n                children: \"Delete account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movies-user-icon-dropdown-content-item\",\n              onClick: logOut,\n              children: \"Log out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"movies-movies-list-h1\",\n      children: \"All Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-movies-list\",\n      children: [allMovies && allMovies.getAllMovies && moviesImages ? allMovies.getAllMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-movies-list-item\",\n        onClick: function () {\n          setKey(index);\n          openMovieModal();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"movies-movies-list-item-img\",\n          src: moviesImages[index][1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 19\n        }, this), \" \", movie.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 19\n        }, this), \" \", movie.releaseYear, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 19\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)) : null, /*#__PURE__*/_jsxDEV(Modal, {\n        closeTimeoutMS: 60,\n        isOpen: movieModalOpen,\n        onRequestClose: closeMovieModal,\n        style: modalStyles,\n        ariaHideApp: false,\n        children: allMovies && allMovies.getAllMovies ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-movies-list-item-modal-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"movies-movies-list-item-modal-image-img\",\n              src: (_moviesImages$key = moviesImages[key]) === null || _moviesImages$key === void 0 ? void 0 : _moviesImages$key[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-movies-list-item-modal-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 72\n            }, this), \" \", (_allMovies$getAllMovi = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi === void 0 ? void 0 : _allMovies$getAllMovi.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 19\n          }, this), \" \", (_allMovies$getAllMovi2 = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi2 === void 0 ? void 0 : _allMovies$getAllMovi2.releaseYear, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Director(s):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 19\n          }, this), \" \", (_allMovies$getAllMovi3 = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi3 === void 0 ? void 0 : _allMovies$getAllMovi3.directors.map((director, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 23\n            }, this), director + ' ']\n          }, void 0, true)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Top Cast:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 19\n          }, this), \" \", (_allMovies$getAllMovi4 = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi4 === void 0 ? void 0 : _allMovies$getAllMovi4.topCast.map((castMember, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 23\n            }, this), castMember + ' ']\n          }, void 0, true)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Country(ies):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 19\n          }, this), \" \", (_allMovies$getAllMovi5 = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi5 === void 0 ? void 0 : _allMovies$getAllMovi5.countries.map((country, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 23\n            }, this), country + ' ']\n          }, void 0, true)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 19\n          }, this), (_allMovies$getAllMovi6 = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi6 === void 0 ? void 0 : _allMovies$getAllMovi6.description, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-movies-list-item-modal-trailer\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"movies-movies-list-item-modal-trailer-h1\",\n              children: \"Trailer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n              className: \"movies-movies-list-item-modal-trailer-iframe\",\n              width: \"500\",\n              height: \"350\",\n              src: (_allMovies$getAllMovi7 = allMovies.getAllMovies[key]) === null || _allMovies$getAllMovi7 === void 0 ? void 0 : _allMovies$getAllMovi7.trailerEmbedUrl,\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(Movies, \"4VWfdsYsmDl8o6PIR/i2RnoHu80=\", false, function () {\n  return [useMutation, useMutation, useQuery, useQuery, useQuery, useMutation];\n});\n_c = Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["Modal","gql","useQuery","useMutation","useEffect","useRef","useState","modalStyles","Formik","Form","Field","ErrorMessage","yup","GET_USER_DATA_QUERY","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","_s","_moviesImages$key","_allMovies$getAllMovi","_allMovies$getAllMovi2","_allMovies$getAllMovi3","_allMovies$getAllMovi4","_allMovies$getAllMovi5","_allMovies$getAllMovi6","_allMovies$getAllMovi7","RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY","UPDATE_USER_MUTATION","UPDATE_USER_PASSWORD_MUTATION","RETRIEVE_ALL_MOVIES_QUERY","DELETE_USER_MUTATION","moviesImages","setMoviesImages","moviesImagesRef","downloadMoviesImages","moviesImagesResponse","fetch","method","moviesImagesResponseData","json","e","console","log","areSubmittedDetailsSame","setAreSubmittedDetailsSame","areSubmittedDetailsSameRef","formikReference","mutateUpdateUser","refetchQueries","query","mutateUpdateUserPassword","data","allUsersData","allMovies","accountFormInitialValues","email","name","me","newPasswordFormInitialValues","password","confirmPassword","accountFormValidationSchema","object","string","required","test","value","emailAlreadyExists","users","forEach","user","max","newPasswordFormValidationSchema","oneOf","ref","modalIsOpen","setIsOpen","openModal","closeModal","removeSubmittedDetailsAreTheSameErrorMessage","movieModalOpen","setMovieModalOpen","openMovieModal","document","body","style","overflow","closeMovieModal","mutateDeleteUser","deleteAccount","window","confirm","localStorage","removeItem","location","reload","key","setKey","keyRef","logOut","checkIfSubmittedDetailsAreSame","current","values","className","children","href","id","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","closeTimeoutMS","isOpen","onRequestClose","ariaHideApp","initialValues","validationSchema","innerRef","onSubmit","setSubmitting","variables","onKeyDown","component","getAllMovies","map","movie","index","src","title","releaseYear","directors","director","topCast","castMember","countries","country","description","width","height","trailerEmbedUrl","allow","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/movie-app/frontend/src/sites/Movies.tsx"],"sourcesContent":["import '../styles/Movies.css';\r\nimport Modal from 'react-modal';\r\nimport { gql, useQuery, useMutation } from '@apollo/client';\r\nimport { useEffect, useRef } from 'react';\r\nimport useState from 'react-usestateref';\r\nimport { modalStyles } from '../styles/ModalStyles';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { GET_USER_DATA_QUERY} from './Signup';\r\n\r\nexport default function Movies() {\r\n  const RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY = gql`\r\n    query RetrieveCurrentAccountDataQuery {\r\n        me {\r\n          email\r\n          name\r\n        }\r\n    }\r\n    `\r\n    ;\r\n  const UPDATE_USER_MUTATION = gql`\r\n    mutation updateUser($email: String, $name: String) {\r\n      updateUser(email: $email, name: $name) {\r\n        id\r\n      }\r\n    }\r\n    `\r\n    ;\r\n  const UPDATE_USER_PASSWORD_MUTATION = gql`\r\n    mutation updateUserPassword($password: String!) {\r\n      updateUserPassword(password: $password) {\r\n        id\r\n      }\r\n    }\r\n    `\r\n    ;\r\n  const RETRIEVE_ALL_MOVIES_QUERY = gql`\r\n    query RetrieveAllMovies {\r\n      getAllMovies {\r\n        id\r\n        title\r\n        description\r\n        releaseYear\r\n        directors\r\n        topCast\r\n        countries\r\n        trailerEmbedUrl\r\n      }\r\n    }\r\n    `;\r\n  const DELETE_USER_MUTATION = gql`\r\n    mutation DeleteUser {\r\n      deleteUser {\r\n        id\r\n      }\r\n    }\r\n    `;\r\n  const [moviesImages, setMoviesImages, moviesImagesRef] = useState('');\r\n  useEffect(() => {\r\n    async function downloadMoviesImages() {\r\n      try {\r\n        const moviesImagesResponse = await fetch('http://localhost:4001/downloadMoviesImages', {\r\n          method: 'POST'\r\n        });\r\n        const moviesImagesResponseData = await moviesImagesResponse.json();\r\n        setMoviesImages(moviesImagesResponseData);\r\n      }\r\n      catch(e) {\r\n        console.log('Error downloading movies images',e);\r\n      }\r\n    }\r\n    downloadMoviesImages();\r\n  },[]);\r\n  const [areSubmittedDetailsSame, setAreSubmittedDetailsSame, areSubmittedDetailsSameRef] = useState(false);\r\n  const formikReference = useRef(null);\r\n  const [mutateUpdateUser] = useMutation(UPDATE_USER_MUTATION, {\r\n    refetchQueries: [{query: RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY}, {query: GET_USER_DATA_QUERY}] // updates the client's cache with fresh data\r\n  });\r\n  const [mutateUpdateUserPassword] = useMutation(UPDATE_USER_PASSWORD_MUTATION);\r\n  const {data} = useQuery(RETRIEVE_CURRENT_ACCOUNT_DATA_QUERY);\r\n  const {data: allUsersData} = useQuery(GET_USER_DATA_QUERY);\r\n  const {data: allMovies} = useQuery(RETRIEVE_ALL_MOVIES_QUERY);\r\n  let accountFormInitialValues = {\r\n    email: '',\r\n    name: ''\r\n  };\r\n  if(data && data.me) {\r\n    accountFormInitialValues = {\r\n      email: data.me.email,\r\n      name: data.me.name\r\n    };\r\n  }\r\n  const newPasswordFormInitialValues = {\r\n    password: '',\r\n    confirmPassword: ''\r\n  };\r\n  const accountFormValidationSchema = yup.object({\r\n    email: yup.string().email(\"Invalid email address\").required(\"Email required\") // defines a string schema\r\n            .test('check-if-email-already-exists', 'Email already exists',\r\n              function(value) {\r\n                let emailAlreadyExists = false;\r\n                if(allUsersData && allUsersData.users && data && data.me) {\r\n                  allUsersData.users.forEach(function(user: any) {\r\n                      if(user.email === value && data.me.email !== value) {\r\n                          emailAlreadyExists = true;\r\n                      }\r\n                  });\r\n                }\r\n                if(emailAlreadyExists) {\r\n                  return false; // returns a message \"Email already exists\"\r\n                }\r\n                return true;\r\n              }),\r\n    name: yup.string().max(15,\"15 characters or less\").required(\"Name required\")\r\n  });\r\n  const newPasswordFormValidationSchema = yup.object({\r\n    password: yup.string().max(20, '20 characters or less').required(\"Password required\"),\r\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\")],\"Passwords must match\").required(\"Confirm password\") // if password field has null value\r\n  });\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    removeSubmittedDetailsAreTheSameErrorMessage();\r\n    setIsOpen(false);\r\n  };\r\n  const [movieModalOpen,setMovieModalOpen] = useState(false);\r\n  const openMovieModal = () => {\r\n    setMovieModalOpen(true);\r\n    document.body.style.overflow = 'hidden';\r\n  };\r\n  const closeMovieModal = () => {\r\n    document.body.style.overflow = 'auto';\r\n    setMovieModalOpen(false);\r\n  };\r\n  const [mutateDeleteUser] = useMutation(DELETE_USER_MUTATION);\r\n  const deleteAccount = async () => {\r\n    if(window.confirm('Your account will be deleted. Continue?')) {\r\n      await mutateDeleteUser();\r\n      localStorage.removeItem(\"Movie App Authentication Token\");\r\n      window.location.reload();\r\n    }\r\n  };\r\n  const [key, setKey, keyRef] = useState(null);\r\n  function logOut() {\r\n    localStorage.removeItem(\"Movie App Authentication Token\");\r\n    window.location.reload();\r\n  }\r\n  function checkIfSubmittedDetailsAreSame() {\r\n    if(data && data.me && formikReference.current.values && formikReference.current.values.email && formikReference.current.values.name) {\r\n      if(data.me.email === formikReference.current.values.email && data.me.name === formikReference.current.values.name) {\r\n        setAreSubmittedDetailsSame(true);\r\n      }\r\n    }\r\n  }\r\n  function removeSubmittedDetailsAreTheSameErrorMessage() {\r\n    setAreSubmittedDetailsSame(false);\r\n  }\r\n  return (\r\n    <div className=\"movies-container\">\r\n      <div className=\"movies-navbar\">\r\n        <span className=\"movies-logo\">\r\n          <a href='/movies' className=\"movies-a\">\r\n            <i id=\"movies-logo-icon\" className=\"fa-solid fa-film\" aria-hidden=\"true\"></i>\r\n          </a>\r\n        </span>\r\n        <span className=\"movies-search-field\">\r\n          <form className='movies-form-search'>\r\n            <input className='movies-input-search' type=\"text\" placeholder=\"Search...\"></input>\r\n          </form>\r\n        </span>\r\n        <span className=\"movies-user-icon\">\r\n          <i id=\"movies-user-icon-i\" className=\"fa-solid fa-circle-user\" aria-hidden=\"true\">\r\n            <div className='movies-user-icon-dropdown-content'>\r\n              <div className='movies-user-icon-dropdown-content-item' onClick={openModal}>Account</div>\r\n              <Modal closeTimeoutMS={60} isOpen={modalIsOpen} onRequestClose={closeModal} style={modalStyles} ariaHideApp={false}>\r\n                <h1 className='movies-account-modal-h1'>Account</h1>\r\n                <Formik initialValues={accountFormInitialValues} validationSchema={accountFormValidationSchema} innerRef={formikReference} onSubmit={async (values,{setSubmitting}) => {\r\n                    setSubmitting(true);\r\n                    checkIfSubmittedDetailsAreSame();\r\n                    if(!areSubmittedDetailsSameRef.current) {\r\n                      await mutateUpdateUser({variables: values});\r\n                      closeModal();\r\n                    }\r\n                    setSubmitting(false);\r\n                }}>\r\n                  <Form className='movies-form-account'>\r\n                    <Field name='email' className='movies-input-account' type=\"text\" onKeyDown={removeSubmittedDetailsAreTheSameErrorMessage}></Field>\r\n                    <ErrorMessage name='email' className='movies-input-account-error-message' component={'div'} />\r\n                    <Field name='name' className='movies-input-account' type=\"text\" onKeyDown={removeSubmittedDetailsAreTheSameErrorMessage}></Field>\r\n                    <ErrorMessage name='name' className='movies-input-account-error-message' component={'div'} />\r\n                    {areSubmittedDetailsSame ? (\r\n                      <div className='movies-input-account-error-message'>Submitted details are the same as current details</div>\r\n                    ) : null}\r\n                    <button type=\"submit\" className='movies-button-account'>Update</button>\r\n                  </Form>\r\n                </Formik>\r\n                <br />\r\n                <Formik initialValues={newPasswordFormInitialValues} validationSchema={newPasswordFormValidationSchema} onSubmit={async (values,{setSubmitting}) => {\r\n                    setSubmitting(true);\r\n                    await mutateUpdateUserPassword({variables: values});\r\n                    closeModal();\r\n                    setSubmitting(false);\r\n                }}>\r\n                  <Form className='movies-form-account'>\r\n                    <Field name='password' className='movies-input-account' type=\"password\" placeholder='New password'></Field>\r\n                    <ErrorMessage name='password' className='movies-input-account-error-message' component={'div'} />\r\n                    <Field name='confirmPassword' className='movies-input-account' type=\"password\" placeholder='Confirm password'></Field>\r\n                    <ErrorMessage name='confirmPassword' className='movies-input-account-error-message' component={'div'} />\r\n                    <button type=\"submit\" className='movies-button-account'>Update password</button>\r\n                  </Form>\r\n                </Formik>\r\n                <button type='button' className='movies-account-delete-button' onClick={deleteAccount}>Delete account</button>\r\n              </Modal>\r\n              <div className='movies-user-icon-dropdown-content-item' onClick={logOut}>Log out</div>\r\n            </div>\r\n          </i>\r\n        </span>\r\n      </div>\r\n      <h1 className='movies-movies-list-h1'>All Movies</h1>\r\n      <div className='movies-movies-list'>\r\n          {\r\n            allMovies && allMovies.getAllMovies && moviesImages ? (\r\n              allMovies.getAllMovies.map((movie:any,index:any) => (\r\n                <div className='movies-movies-list-item' key={index} onClick={ function() {\r\n                  setKey(index);\r\n                  openMovieModal();\r\n                }}>\r\n                  <img className='movies-movies-list-item-img' src={moviesImages[index][1]}></img>\r\n                  <br />\r\n                  <b>Title:</b> {movie.title}\r\n                  <br />\r\n                  <b>Year:</b> {movie.releaseYear}\r\n                  <br />\r\n                  \r\n                </div>\r\n              ))\r\n            ) : null\r\n          }\r\n          <Modal closeTimeoutMS={60} isOpen={movieModalOpen} onRequestClose={closeMovieModal} style={modalStyles} ariaHideApp={false}>\r\n            {\r\n              allMovies && allMovies.getAllMovies ? (\r\n                <>\r\n                  <div className='movies-movies-list-item-modal-image'>\r\n                    <img className='movies-movies-list-item-modal-image-img' src={moviesImages[key]?.[1]}></img>\r\n                  </div>\r\n                  <div className='movies-movies-list-item-modal-title'><b>Title:</b> {allMovies.getAllMovies[key]?.title}</div>\r\n                  <b>Year:</b> {allMovies.getAllMovies[key]?.releaseYear}\r\n                  <br />\r\n                  <b>Director(s):</b> {allMovies.getAllMovies[key]?.directors.map((director:any,index:any) => (\r\n                    <><br />{director + ' '}</>\r\n                  ))}\r\n                  <br />\r\n                  <b>Top Cast:</b> {allMovies.getAllMovies[key]?.topCast.map((castMember:any,index:any) => (\r\n                    <><br />{castMember + ' '}</>\r\n                  ))}\r\n                  <br />\r\n                  <b>Country(ies):</b> {allMovies.getAllMovies[key]?.countries.map((country:any,index:any) => (\r\n                    <><br />{country + ' '}</>\r\n                  ))}\r\n                  <br />\r\n                  <b>Description:</b>\r\n                  <br />\r\n                  {allMovies.getAllMovies[key]?.description}\r\n                  <div className='movies-movies-list-item-modal-trailer'>\r\n                    <h1 className='movies-movies-list-item-modal-trailer-h1'>Trailer</h1>\r\n                    <iframe\r\n                      className='movies-movies-list-item-modal-trailer-iframe'\r\n                      width=\"500\"\r\n                      height=\"350\"\r\n                      src={allMovies.getAllMovies[key]?.trailerEmbedUrl}\r\n                      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\">\r\n                    </iframe>\r\n                  </div>\r\n                </>\r\n              ) : null\r\n            }\r\n          </Modal>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"mappings":";;AAAA,OAAO,sBAAsB;AAC7B,OAAOA,KAAK,MAAM,aAAa;AAC/B,SAASC,GAAG,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,gBAAgB;AAC3D,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,mBAAmB,QAAO,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAC/B,MAAMC,mCAAmC,GAAG3B,GAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;EAEH,MAAM4B,oBAAoB,GAAG5B,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;EAEH,MAAM6B,6BAA6B,GAAG7B,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA,KAAK;EAEH,MAAM8B,yBAAyB,GAAG9B,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;EACH,MAAM+B,oBAAoB,GAAG/B,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;EACH,MAAM,CAACgC,YAAY,EAAEC,eAAe,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACrEF,SAAS,CAAC,MAAM;IACd,eAAegC,oBAAoBA,CAAA,EAAG;MACpC,IAAI;QACF,MAAMC,oBAAoB,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;UACrFC,MAAM,EAAE;QACV,CAAC,CAAC;QACF,MAAMC,wBAAwB,GAAG,MAAMH,oBAAoB,CAACI,IAAI,CAAC,CAAC;QAClEP,eAAe,CAACM,wBAAwB,CAAC;MAC3C,CAAC,CACD,OAAME,CAAC,EAAE;QACPC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAACF,CAAC,CAAC;MAClD;IACF;IACAN,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAC,EAAE,CAAC;EACL,MAAM,CAACS,uBAAuB,EAAEC,0BAA0B,EAAEC,0BAA0B,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EACzG,MAAM0C,eAAe,GAAG3C,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM,CAAC4C,gBAAgB,CAAC,GAAG9C,WAAW,CAAC0B,oBAAoB,EAAE;IAC3DqB,cAAc,EAAE,CAAC;MAACC,KAAK,EAAEvB;IAAmC,CAAC,EAAE;MAACuB,KAAK,EAAEtC;IAAmB,CAAC,CAAC,CAAC;EAC/F,CAAC,CAAC;EACF,MAAM,CAACuC,wBAAwB,CAAC,GAAGjD,WAAW,CAAC2B,6BAA6B,CAAC;EAC7E,MAAM;IAACuB;EAAI,CAAC,GAAGnD,QAAQ,CAAC0B,mCAAmC,CAAC;EAC5D,MAAM;IAACyB,IAAI,EAAEC;EAAY,CAAC,GAAGpD,QAAQ,CAACW,mBAAmB,CAAC;EAC1D,MAAM;IAACwC,IAAI,EAAEE;EAAS,CAAC,GAAGrD,QAAQ,CAAC6B,yBAAyB,CAAC;EAC7D,IAAIyB,wBAAwB,GAAG;IAC7BC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE;EACR,CAAC;EACD,IAAGL,IAAI,IAAIA,IAAI,CAACM,EAAE,EAAE;IAClBH,wBAAwB,GAAG;MACzBC,KAAK,EAAEJ,IAAI,CAACM,EAAE,CAACF,KAAK;MACpBC,IAAI,EAAEL,IAAI,CAACM,EAAE,CAACD;IAChB,CAAC;EACH;EACA,MAAME,4BAA4B,GAAG;IACnCC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACnB,CAAC;EACD,MAAMC,2BAA2B,GAAGnD,GAAG,CAACoD,MAAM,CAAC;IAC7CP,KAAK,EAAE7C,GAAG,CAACqD,MAAM,CAAC,CAAC,CAACR,KAAK,CAAC,uBAAuB,CAAC,CAACS,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAAA,CACrEC,IAAI,CAAC,+BAA+B,EAAE,sBAAsB,EAC3D,UAASC,KAAK,EAAE;MACd,IAAIC,kBAAkB,GAAG,KAAK;MAC9B,IAAGf,YAAY,IAAIA,YAAY,CAACgB,KAAK,IAAIjB,IAAI,IAAIA,IAAI,CAACM,EAAE,EAAE;QACxDL,YAAY,CAACgB,KAAK,CAACC,OAAO,CAAC,UAASC,IAAS,EAAE;UAC3C,IAAGA,IAAI,CAACf,KAAK,KAAKW,KAAK,IAAIf,IAAI,CAACM,EAAE,CAACF,KAAK,KAAKW,KAAK,EAAE;YAChDC,kBAAkB,GAAG,IAAI;UAC7B;QACJ,CAAC,CAAC;MACJ;MACA,IAAGA,kBAAkB,EAAE;QACrB,OAAO,KAAK,CAAC,CAAC;MAChB;MACA,OAAO,IAAI;IACb,CAAC,CAAC;IACZX,IAAI,EAAE9C,GAAG,CAACqD,MAAM,CAAC,CAAC,CAACQ,GAAG,CAAC,EAAE,EAAC,uBAAuB,CAAC,CAACP,QAAQ,CAAC,eAAe;EAC7E,CAAC,CAAC;EACF,MAAMQ,+BAA+B,GAAG9D,GAAG,CAACoD,MAAM,CAAC;IACjDH,QAAQ,EAAEjD,GAAG,CAACqD,MAAM,CAAC,CAAC,CAACQ,GAAG,CAAC,EAAE,EAAE,uBAAuB,CAAC,CAACP,QAAQ,CAAC,mBAAmB,CAAC;IACrFJ,eAAe,EAAElD,GAAG,CAACqD,MAAM,CAAC,CAAC,CAACU,KAAK,CAAC,CAAC/D,GAAG,CAACgE,GAAG,CAAC,UAAU,CAAC,CAAC,EAAC,sBAAsB,CAAC,CAACV,QAAQ,CAAC,kBAAkB,CAAC,CAAC;EACjH,CAAC,CAAC;EACF,MAAM,CAACW,WAAW,EAAEC,SAAS,CAAC,GAAGxE,QAAQ,CAAC,KAAK,CAAC;EAChD,MAAMyE,SAAS,GAAGA,CAAA,KAAM;IACtBD,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EACD,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBC,4CAA4C,CAAC,CAAC;IAC9CH,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EACD,MAAM,CAACI,cAAc,EAACC,iBAAiB,CAAC,GAAG7E,QAAQ,CAAC,KAAK,CAAC;EAC1D,MAAM8E,cAAc,GAAGA,CAAA,KAAM;IAC3BD,iBAAiB,CAAC,IAAI,CAAC;IACvBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;EACzC,CAAC;EACD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,MAAM;IACrCL,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EACD,MAAM,CAACO,gBAAgB,CAAC,GAAGvF,WAAW,CAAC6B,oBAAoB,CAAC;EAC5D,MAAM2D,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAGC,MAAM,CAACC,OAAO,CAAC,yCAAyC,CAAC,EAAE;MAC5D,MAAMH,gBAAgB,CAAC,CAAC;MACxBI,YAAY,CAACC,UAAU,CAAC,gCAAgC,CAAC;MACzDH,MAAM,CAACI,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B;EACF,CAAC;EACD,MAAM,CAACC,GAAG,EAAEC,MAAM,EAAEC,MAAM,CAAC,GAAG9F,QAAQ,CAAC,IAAI,CAAC;EAC5C,SAAS+F,MAAMA,CAAA,EAAG;IAChBP,YAAY,CAACC,UAAU,CAAC,gCAAgC,CAAC;IACzDH,MAAM,CAACI,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC1B;EACA,SAASK,8BAA8BA,CAAA,EAAG;IACxC,IAAGjD,IAAI,IAAIA,IAAI,CAACM,EAAE,IAAIX,eAAe,CAACuD,OAAO,CAACC,MAAM,IAAIxD,eAAe,CAACuD,OAAO,CAACC,MAAM,CAAC/C,KAAK,IAAIT,eAAe,CAACuD,OAAO,CAACC,MAAM,CAAC9C,IAAI,EAAE;MACnI,IAAGL,IAAI,CAACM,EAAE,CAACF,KAAK,KAAKT,eAAe,CAACuD,OAAO,CAACC,MAAM,CAAC/C,KAAK,IAAIJ,IAAI,CAACM,EAAE,CAACD,IAAI,KAAKV,eAAe,CAACuD,OAAO,CAACC,MAAM,CAAC9C,IAAI,EAAE;QACjHZ,0BAA0B,CAAC,IAAI,CAAC;MAClC;IACF;EACF;EACA,SAASmC,4CAA4CA,CAAA,EAAG;IACtDnC,0BAA0B,CAAC,KAAK,CAAC;EACnC;EACA,oBACE/B,OAAA;IAAK0F,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/B3F,OAAA;MAAK0F,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B3F,OAAA;QAAM0F,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC3B3F,OAAA;UAAG4F,IAAI,EAAC,SAAS;UAACF,SAAS,EAAC,UAAU;UAAAC,QAAA,eACpC3F,OAAA;YAAG6F,EAAE,EAAC,kBAAkB;YAACH,SAAS,EAAC,kBAAkB;YAAC,eAAY;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACPjG,OAAA;QAAM0F,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eACnC3F,OAAA;UAAM0F,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eAClC3F,OAAA;YAAO0F,SAAS,EAAC,qBAAqB;YAACQ,IAAI,EAAC,MAAM;YAACC,WAAW,EAAC;UAAW;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACPjG,OAAA;QAAM0F,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAChC3F,OAAA;UAAG6F,EAAE,EAAC,oBAAoB;UAACH,SAAS,EAAC,yBAAyB;UAAC,eAAY,MAAM;UAAAC,QAAA,eAC/E3F,OAAA;YAAK0F,SAAS,EAAC,mCAAmC;YAAAC,QAAA,gBAChD3F,OAAA;cAAK0F,SAAS,EAAC,wCAAwC;cAACU,OAAO,EAAEpC,SAAU;cAAA2B,QAAA,EAAC;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzFjG,OAAA,CAACf,KAAK;cAACoH,cAAc,EAAE,EAAG;cAACC,MAAM,EAAExC,WAAY;cAACyC,cAAc,EAAEtC,UAAW;cAACO,KAAK,EAAEhF,WAAY;cAACgH,WAAW,EAAE,KAAM;cAAAb,QAAA,gBACjH3F,OAAA;gBAAI0F,SAAS,EAAC,yBAAyB;gBAAAC,QAAA,EAAC;cAAO;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpDjG,OAAA,CAACP,MAAM;gBAACgH,aAAa,EAAEhE,wBAAyB;gBAACiE,gBAAgB,EAAE1D,2BAA4B;gBAAC2D,QAAQ,EAAE1E,eAAgB;gBAAC2E,QAAQ,EAAE,MAAAA,CAAOnB,MAAM,EAAC;kBAACoB;gBAAa,CAAC,KAAK;kBACnKA,aAAa,CAAC,IAAI,CAAC;kBACnBtB,8BAA8B,CAAC,CAAC;kBAChC,IAAG,CAACvD,0BAA0B,CAACwD,OAAO,EAAE;oBACtC,MAAMtD,gBAAgB,CAAC;sBAAC4E,SAAS,EAAErB;oBAAM,CAAC,CAAC;oBAC3CxB,UAAU,CAAC,CAAC;kBACd;kBACA4C,aAAa,CAAC,KAAK,CAAC;gBACxB,CAAE;gBAAAlB,QAAA,eACA3F,OAAA,CAACN,IAAI;kBAACgG,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,gBACnC3F,OAAA,CAACL,KAAK;oBAACgD,IAAI,EAAC,OAAO;oBAAC+C,SAAS,EAAC,sBAAsB;oBAACQ,IAAI,EAAC,MAAM;oBAACa,SAAS,EAAE7C;kBAA6C;oBAAA4B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAClIjG,OAAA,CAACJ,YAAY;oBAAC+C,IAAI,EAAC,OAAO;oBAAC+C,SAAS,EAAC,oCAAoC;oBAACsB,SAAS,EAAE;kBAAM;oBAAAlB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eAC9FjG,OAAA,CAACL,KAAK;oBAACgD,IAAI,EAAC,MAAM;oBAAC+C,SAAS,EAAC,sBAAsB;oBAACQ,IAAI,EAAC,MAAM;oBAACa,SAAS,EAAE7C;kBAA6C;oBAAA4B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACjIjG,OAAA,CAACJ,YAAY;oBAAC+C,IAAI,EAAC,MAAM;oBAAC+C,SAAS,EAAC,oCAAoC;oBAACsB,SAAS,EAAE;kBAAM;oBAAAlB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,EAC5FnE,uBAAuB,gBACtB9B,OAAA;oBAAK0F,SAAS,EAAC,oCAAoC;oBAAAC,QAAA,EAAC;kBAAiD;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,GACzG,IAAI,eACRjG,OAAA;oBAAQkG,IAAI,EAAC,QAAQ;oBAACR,SAAS,EAAC,uBAAuB;oBAAAC,QAAA,EAAC;kBAAM;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eACTjG,OAAA;gBAAA8F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACNjG,OAAA,CAACP,MAAM;gBAACgH,aAAa,EAAE5D,4BAA6B;gBAAC6D,gBAAgB,EAAE/C,+BAAgC;gBAACiD,QAAQ,EAAE,MAAAA,CAAOnB,MAAM,EAAC;kBAACoB;gBAAa,CAAC,KAAK;kBAChJA,aAAa,CAAC,IAAI,CAAC;kBACnB,MAAMxE,wBAAwB,CAAC;oBAACyE,SAAS,EAAErB;kBAAM,CAAC,CAAC;kBACnDxB,UAAU,CAAC,CAAC;kBACZ4C,aAAa,CAAC,KAAK,CAAC;gBACxB,CAAE;gBAAAlB,QAAA,eACA3F,OAAA,CAACN,IAAI;kBAACgG,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,gBACnC3F,OAAA,CAACL,KAAK;oBAACgD,IAAI,EAAC,UAAU;oBAAC+C,SAAS,EAAC,sBAAsB;oBAACQ,IAAI,EAAC,UAAU;oBAACC,WAAW,EAAC;kBAAc;oBAAAL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAC3GjG,OAAA,CAACJ,YAAY;oBAAC+C,IAAI,EAAC,UAAU;oBAAC+C,SAAS,EAAC,oCAAoC;oBAACsB,SAAS,EAAE;kBAAM;oBAAAlB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACjGjG,OAAA,CAACL,KAAK;oBAACgD,IAAI,EAAC,iBAAiB;oBAAC+C,SAAS,EAAC,sBAAsB;oBAACQ,IAAI,EAAC,UAAU;oBAACC,WAAW,EAAC;kBAAkB;oBAAAL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACtHjG,OAAA,CAACJ,YAAY;oBAAC+C,IAAI,EAAC,iBAAiB;oBAAC+C,SAAS,EAAC,oCAAoC;oBAACsB,SAAS,EAAE;kBAAM;oBAAAlB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACxGjG,OAAA;oBAAQkG,IAAI,EAAC,QAAQ;oBAACR,SAAS,EAAC,uBAAuB;oBAAAC,QAAA,EAAC;kBAAe;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5E;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eACTjG,OAAA;gBAAQkG,IAAI,EAAC,QAAQ;gBAACR,SAAS,EAAC,8BAA8B;gBAACU,OAAO,EAAExB,aAAc;gBAAAe,QAAA,EAAC;cAAc;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzG,CAAC,eACRjG,OAAA;cAAK0F,SAAS,EAAC,wCAAwC;cAACU,OAAO,EAAEd,MAAO;cAAAK,QAAA,EAAC;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNjG,OAAA;MAAI0F,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrDjG,OAAA;MAAK0F,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAE7BnD,SAAS,IAAIA,SAAS,CAACyE,YAAY,IAAI/F,YAAY,GACjDsB,SAAS,CAACyE,YAAY,CAACC,GAAG,CAAC,CAACC,KAAS,EAACC,KAAS,kBAC7CpH,OAAA;QAAK0F,SAAS,EAAC,yBAAyB;QAAaU,OAAO,EAAG,SAAAA,CAAA,EAAW;UACxEhB,MAAM,CAACgC,KAAK,CAAC;UACb/C,cAAc,CAAC,CAAC;QAClB,CAAE;QAAAsB,QAAA,gBACA3F,OAAA;UAAK0F,SAAS,EAAC,6BAA6B;UAAC2B,GAAG,EAAEnG,YAAY,CAACkG,KAAK,CAAC,CAAC,CAAC;QAAE;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAChFjG,OAAA;UAAA8F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNjG,OAAA;UAAA2F,QAAA,EAAG;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC,EAACkB,KAAK,CAACG,KAAK,eAC1BtH,OAAA;UAAA8F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNjG,OAAA;UAAA2F,QAAA,EAAG;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC,EAACkB,KAAK,CAACI,WAAW,eAC/BvH,OAAA;UAAA8F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GATsCmB,KAAK;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAW9C,CACN,CAAC,GACA,IAAI,eAEVjG,OAAA,CAACf,KAAK;QAACoH,cAAc,EAAE,EAAG;QAACC,MAAM,EAAEnC,cAAe;QAACoC,cAAc,EAAE7B,eAAgB;QAACF,KAAK,EAAEhF,WAAY;QAACgH,WAAW,EAAE,KAAM;QAAAb,QAAA,EAEvHnD,SAAS,IAAIA,SAAS,CAACyE,YAAY,gBACjCjH,OAAA,CAAAE,SAAA;UAAAyF,QAAA,gBACE3F,OAAA;YAAK0F,SAAS,EAAC,qCAAqC;YAAAC,QAAA,eAClD3F,OAAA;cAAK0F,SAAS,EAAC,yCAAyC;cAAC2B,GAAG,GAAAhH,iBAAA,GAAEa,YAAY,CAACiE,GAAG,CAAC,cAAA9E,iBAAA,uBAAjBA,iBAAA,CAAoB,CAAC;YAAE;cAAAyF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzF,CAAC,eACNjG,OAAA;YAAK0F,SAAS,EAAC,qCAAqC;YAAAC,QAAA,gBAAC3F,OAAA;cAAA2F,QAAA,EAAG;YAAM;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,GAAA3F,qBAAA,GAACkC,SAAS,CAACyE,YAAY,CAAC9B,GAAG,CAAC,cAAA7E,qBAAA,uBAA3BA,qBAAA,CAA6BgH,KAAK;UAAA;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7GjG,OAAA;YAAA2F,QAAA,EAAG;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,KAAC,GAAA1F,sBAAA,GAACiC,SAAS,CAACyE,YAAY,CAAC9B,GAAG,CAAC,cAAA5E,sBAAA,uBAA3BA,sBAAA,CAA6BgH,WAAW,eACtDvH,OAAA;YAAA8F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNjG,OAAA;YAAA2F,QAAA,EAAG;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,KAAC,GAAAzF,sBAAA,GAACgC,SAAS,CAACyE,YAAY,CAAC9B,GAAG,CAAC,cAAA3E,sBAAA,uBAA3BA,sBAAA,CAA6BgH,SAAS,CAACN,GAAG,CAAC,CAACO,QAAY,EAACL,KAAS,kBACrFpH,OAAA,CAAAE,SAAA;YAAAyF,QAAA,gBAAE3F,OAAA;cAAA8F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EAACwB,QAAQ,GAAG,GAAG;UAAA,eAAG,CAC3B,CAAC,eACFzH,OAAA;YAAA8F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNjG,OAAA;YAAA2F,QAAA,EAAG;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,KAAC,GAAAxF,sBAAA,GAAC+B,SAAS,CAACyE,YAAY,CAAC9B,GAAG,CAAC,cAAA1E,sBAAA,uBAA3BA,sBAAA,CAA6BiH,OAAO,CAACR,GAAG,CAAC,CAACS,UAAc,EAACP,KAAS,kBAClFpH,OAAA,CAAAE,SAAA;YAAAyF,QAAA,gBAAE3F,OAAA;cAAA8F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EAAC0B,UAAU,GAAG,GAAG;UAAA,eAAG,CAC7B,CAAC,eACF3H,OAAA;YAAA8F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNjG,OAAA;YAAA2F,QAAA,EAAG;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,KAAC,GAAAvF,sBAAA,GAAC8B,SAAS,CAACyE,YAAY,CAAC9B,GAAG,CAAC,cAAAzE,sBAAA,uBAA3BA,sBAAA,CAA6BkH,SAAS,CAACV,GAAG,CAAC,CAACW,OAAW,EAACT,KAAS,kBACrFpH,OAAA,CAAAE,SAAA;YAAAyF,QAAA,gBAAE3F,OAAA;cAAA8F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EAAC4B,OAAO,GAAG,GAAG;UAAA,eAAG,CAC1B,CAAC,eACF7H,OAAA;YAAA8F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNjG,OAAA;YAAA2F,QAAA,EAAG;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACnBjG,OAAA;YAAA8F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,GAAAtF,sBAAA,GACL6B,SAAS,CAACyE,YAAY,CAAC9B,GAAG,CAAC,cAAAxE,sBAAA,uBAA3BA,sBAAA,CAA6BmH,WAAW,eACzC9H,OAAA;YAAK0F,SAAS,EAAC,uCAAuC;YAAAC,QAAA,gBACpD3F,OAAA;cAAI0F,SAAS,EAAC,0CAA0C;cAAAC,QAAA,EAAC;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrEjG,OAAA;cACE0F,SAAS,EAAC,8CAA8C;cACxDqC,KAAK,EAAC,KAAK;cACXC,MAAM,EAAC,KAAK;cACZX,GAAG,GAAAzG,sBAAA,GAAE4B,SAAS,CAACyE,YAAY,CAAC9B,GAAG,CAAC,cAAAvE,sBAAA,uBAA3BA,sBAAA,CAA6BqH,eAAgB;cAClDC,KAAK,EAAC;YAAiH;cAAApC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA,eACN,CAAC,GACD;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7F,EAAA,CAhRuBD,MAAM;EAAA,QAiEDf,WAAW,EAGHA,WAAW,EAC/BD,QAAQ,EACMA,QAAQ,EACXA,QAAQ,EAuDPC,WAAW;AAAA;AAAA+I,EAAA,GA9HhBhI,MAAM;AAAA,IAAAgI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}