{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\twitter-clone\\\\frontend\\\\src\\\\components\\\\IsNotAuthenticated.tsx\",\n  _s = $RefreshSig$();\nimport { gql, useQuery } from '@apollo/client';\nimport { Outlet, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IS_LOGGED_IN = gql`\n{\n    me {\n        id\n    }\n}\n`;\nexport default function IsNotAuthenticated() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(IS_LOGGED_IN); // loading state, error state and data returned by the query\n  const location = useLocation(); // returns the location object from the current URL\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 24\n  }, this);\n  if (error) return data.me ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 32\n  }, this) : null; // returns text \"Not Authorised!\"; \"<Outlet />\" renders the child route's element; \"replace\" won't let you go back to a certain page in a browser and \"state\" allows to store information in a history state\n}\n_s(IsNotAuthenticated, \"hko0I8+Fk3gkDnLCqCPMWxAUitQ=\", false, function () {\n  return [useQuery, useLocation];\n});\n_c = IsNotAuthenticated;\nvar _c;\n$RefreshReg$(_c, \"IsNotAuthenticated\");","map":{"version":3,"names":["gql","useQuery","Outlet","useLocation","jsxDEV","_jsxDEV","IS_LOGGED_IN","IsNotAuthenticated","_s","loading","error","data","location","children","fileName","_jsxFileName","lineNumber","columnNumber","me","_c","$RefreshReg$"],"sources":["C:/Users/Simon/Desktop/twitter-clone/frontend/src/components/IsNotAuthenticated.tsx"],"sourcesContent":["import { gql, useQuery } from '@apollo/client';\r\nimport { Navigate, Outlet, useLocation  } from \"react-router-dom\";\r\n\r\nconst IS_LOGGED_IN = gql`\r\n{\r\n    me {\r\n        id\r\n    }\r\n}\r\n`;\r\n\r\nexport default function IsNotAuthenticated(){\r\n    const {loading, error, data} = useQuery(IS_LOGGED_IN); // loading state, error state and data returned by the query\r\n    const location = useLocation(); // returns the location object from the current URL\r\n    if(loading) return <p>Loading...</p>;\r\n    if(error) return data.me ? <Outlet /> : null; // returns text \"Not Authorised!\"; \"<Outlet />\" renders the child route's element; \"replace\" won't let you go back to a certain page in a browser and \"state\" allows to store information in a history state\r\n}"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,SAAmBC,MAAM,EAAEC,WAAW,QAAS,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,YAAY,GAAGN,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASO,kBAAkBA,CAAA,EAAE;EAAAC,EAAA;EACxC,MAAM;IAACC,OAAO;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGV,QAAQ,CAACK,YAAY,CAAC,CAAC,CAAC;EACvD,MAAMM,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,IAAGM,OAAO,EAAE,oBAAOJ,OAAA;IAAAQ,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACpC,IAAGP,KAAK,EAAE,OAAOC,IAAI,CAACO,EAAE,gBAAGb,OAAA,CAACH,MAAM;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GAAG,IAAI,CAAC,CAAC;AAClD;AAACT,EAAA,CALuBD,kBAAkB;EAAA,QACPN,QAAQ,EACtBE,WAAW;AAAA;AAAAgB,EAAA,GAFRZ,kBAAkB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}