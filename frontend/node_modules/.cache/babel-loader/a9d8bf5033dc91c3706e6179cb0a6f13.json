{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\twitter-clone\\\\frontend\\\\src\\\\components\\\\IsAuthenticated.tsx\";\nimport React from \"react\";\nimport { gql, useQuery } from '@apollo/client';\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\nconst IS_LOGGED_IN = gql`\n{\n    me {\n        id\n    }\n}\n`;\nexport default function IsAuthenticated() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(IS_LOGGED_IN); // loading state, error state and data returned by the query\n  const location = useLocation(); // returns the location object from the current URL\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 24\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 22\n    }\n  }, error.message); // returns text \"Not Authorised!\"\n  return data.me ? /*#__PURE__*/React.createElement(Outlet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }) // renders the child route's element\n  : /*#__PURE__*/React.createElement(Navigate, {\n    to: \"/login\",\n    replace: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }); // \"replace\" won't let you go back to a certain page in a browser and \"state\" allows to store information in a history state\n}","map":{"version":3,"names":["React","gql","useQuery","Navigate","Outlet","useLocation","IS_LOGGED_IN","IsAuthenticated","loading","error","data","location","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message","me","to","replace"],"sources":["C:/Users/Simon/Desktop/twitter-clone/frontend/src/components/IsAuthenticated.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { Navigate, Outlet, useLocation  } from \"react-router-dom\";\r\n\r\nconst IS_LOGGED_IN = gql`\r\n{\r\n    me {\r\n        id\r\n    }\r\n}\r\n`;\r\n\r\ninterface Properties {\r\n    children?: React.ReactNode // if this prop exists\r\n}\r\n\r\nexport default function IsAuthenticated(){\r\n    const {loading, error, data} = useQuery(IS_LOGGED_IN); // loading state, error state and data returned by the query\r\n    const location = useLocation(); // returns the location object from the current URL\r\n    if(loading) return <p>Loading...</p>;\r\n    if(error) return <p>{error.message}</p>; // returns text \"Not Authorised!\"\r\n    return data.me\r\n        ? <Outlet /> // renders the child route's element\r\n        : <Navigate to=\"/login\" replace /> // \"replace\" won't let you go back to a certain page in a browser and \"state\" allows to store information in a history state\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,SAASC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAS,kBAAkB;AAEjE,MAAMC,YAAY,GAAGL,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC;AAMD,eAAe,SAASM,eAAeA,CAAA,EAAE;EACrC,MAAM;IAACC,OAAO;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGR,QAAQ,CAACI,YAAY,CAAC,CAAC,CAAC;EACvD,MAAMK,QAAQ,GAAGN,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,IAAGG,OAAO,EAAE,oBAAOR,KAAA,CAAAY,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC;EACpC,IAAGT,KAAK,EAAE,oBAAOT,KAAA,CAAAY,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIT,KAAK,CAACU,OAAW,CAAC,CAAC,CAAC;EACzC,OAAOT,IAAI,CAACU,EAAE,gBACRpB,KAAA,CAAAY,aAAA,CAACR,MAAM;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,CAAC;EAAA,eACXlB,KAAA,CAAAY,aAAA,CAACT,QAAQ;IAACkB,EAAE,EAAC,QAAQ;IAACC,OAAO;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAAC;AAC3C"},"metadata":{},"sourceType":"module"}