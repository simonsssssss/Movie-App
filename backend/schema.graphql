### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Movie {
  countries: [String]!
  description: String!
  directors: [String]!
  id: Int!
  releaseYear: Int!
  title: String!
  topCast: [String]!
  trailerEmbedUrl: String!
}

type Mutation {
  addMovie(countries: [String]!, description: String!, directors: [String]!, releaseYear: Int!, title: String!, topCast: [String]!, trailerEmbedUrl: String!): Movie
  createDraft(data: PostCreateInput!): Post
  deletePost(id: Int!): Post
  deleteUser: User
  incrementPostViewCount(id: Int!): Post
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, name: String, password: String!): AuthPayload
  togglePublishPost(id: Int!): Post
  updateUser(email: String, name: String): User
  updateUserPassword(password: String!): User
}

type Post {
  author: User
  content: String
  createdAt: DateTime!
  id: Int!
  published: Boolean!
  title: String!
  updatedAt: DateTime!
  viewCount: Int!
}

input PostCreateInput {
  content: String
  title: String!
}

input PostOrderByUpdatedAtInput {
  updatedAt: SortOrder!
}

type Query {
  allUsers: [User!]!
  draftsByUser(userUniqueInput: UserUniqueInput!): [Post]
  findMovies(searchString: String): [Movie!]!
  getAllMovies: [Movie!]!
  me: User
  postById(id: Int): Post
  users(orderBy: PostOrderByUpdatedAtInput, searchString: String, skip: Int, take: Int): [User!]!
}

enum SortOrder {
  asc
  desc
}

type User {
  email: String!
  id: Int!
  name: String
  password: String!
}

input UserCreateInput {
  email: String!
  name: String
  posts: [PostCreateInput!]
}

input UserUniqueInput {
  email: String
  id: Int
}